/**\file nt_sequential_statistics_obj.h - NT_sequential_statistics_o class header
 * by Ahmed Aldo Faisal &copy; created 5.11.2000
 */
/* NetTrader - visualisation, scientific and financial analysis and simulation system
 * Version:  0.5
 * Copyright (C) 1998,1999,2000 Ahmed Aldo Faisal
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */


/* $Id: nt_sequential_statistics_obj.h,v 1.1 2001/06/11 13:18:56 face Exp $
* $Log: nt_sequential_statistics_obj.h,v $
* Revision 1.1  2001/06/11 13:18:56  face
* *** empty log message ***
*

*/
#ifndef _nt_sequential_statistics_obj_h_
#define _nt_sequential_statistics_obj_h_

/* NT core includes */
#include "nt_main.h"
#include "nt_types.h"
#include "nt_obj.h"
/* NT includes */

/* other includes */
#include <cmath>
#include <limits.h>
#include <float.h>

/** @short NT_sequential_statistics_o class
\bug unknown
\warning unknown
*/
class NT_sequential_statistics_o : public NT_o {
public:
    /***   Constructors, Copy/Assignment and Destructor  ***/
    NT_sequential_statistics_o();
    NT_sequential_statistics_o(const NT_sequential_statistics_o & original);
    const NT_sequential_statistics_o & operator= (const NT_sequential_statistics_o & right);
    virtual ~NT_sequential_statistics_o();
    /* ***  Methods              ***/
    void Reset();
    void Add(NTreal val);
    unsigned long int _counter() const {
        return counter;
    }
    NTreal _average() const {
        return average;
    }
    NTreal _valSquareAverage() const {
        return valSquareAverage;
    }
    NTreal _variance() const {
        return variance;
    }
    NTreal _min() const {
        return min;
    }
    NTreal _max() const {
        return max;
    }
    friend ostream& operator<< (ostream& str, const NT_sequential_statistics_o & self);
    /* ***  Data                 ***/
protected:
    /* ***  Methods              ***/
    /* ***  Data                 ***/
private:
    /* ***  Methods              ***/
    NTreal UpdateAverage(NTreal avg, NTreal val, NTsize n) const;
    /* ***  Data                 ***/
    unsigned long int counter;
    NTreal average;
    NTreal valSquareAverage;
    NTreal variance;
    NTreal min;
    NTreal max;
};

#endif /* _nt_sequential_statistics_obj_h_ */

/* File skeleton generated by GenNTObj version 0.7. */
