# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = analyse_binary_data_for_isi_with_histogram$(EXEEXT) \
	basic_glx_demo$(EXEEXT) \
	channel_density_vs_noise_variance$(EXEEXT) \
	channel_spike_trigger$(EXEEXT) diffusion_signalling$(EXEEXT) \
	diffusion_vs_wave_signalling$(EXEEXT) dynamic_flight$(EXEEXT) \
	flying_demo$(EXEEXT) flying_through$(EXEEXT) \
	gaussian_isi_spikes_on_deterministic_axon$(EXEEXT) \
	gaussian_isi_spikes_on_langevin_axon$(EXEEXT) \
	hh_sodium_channel_model$(EXEEXT) \
	hranvier_sodium_channel_model$(EXEEXT) \
	ion_channels_and_open_state_variance$(EXEEXT) \
	MembraneFluctuationsStHH$(EXEEXT) \
	merge_text_file_columns$(EXEEXT) \
	multi_compartment_neuron$(EXEEXT) nt3d_drv_test$(EXEEXT) \
	nt3d_glx_test$(EXEEXT) \
	ntg_grandom_graph_efficiency_study$(EXEEXT) \
	ntg_ring_graph_test$(EXEEXT) ntg_test$(EXEEXT) \
	patlak_sodium_channel_model$(EXEEXT) \
	performance_current_classes_comparison$(EXEEXT) \
	planetary_demo$(EXEEXT) resting_potential_noise$(EXEEXT) \
	saltatory_conduction$(EXEEXT) \
	single_compartment_spiker$(EXEEXT) somasimulator-v1$(EXEEXT) \
	somasimulator-v1-SGA$(EXEEXT) spheric_flying_demo$(EXEEXT) \
	stochastic_ion_channels$(EXEEXT) test_code$(EXEEXT) \
	test_graph_distance_stats$(EXEEXT) \
	test_membrane_currents$(EXEEXT) tunnel_flight_demo$(EXEEXT) \
	WhiteNoise1.0e-8StHH$(EXEEXT) \
	WhiteNoiseMultiCOmpartmentSImulationWithCompartmentVoltageHistogramming$(EXEEXT) \
	myelinaxonsimulator-v1$(EXEEXT)
subdir = nettrader/examples
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
libexamples_a_AR = $(AR) $(ARFLAGS)
libexamples_a_LIBADD =
am_libexamples_a_OBJECTS =  \
	analyse_binary_data_for_isi_with_histogram.$(OBJEXT) \
	basic_glx_demo.$(OBJEXT) \
	channel_density_vs_noise_variance.$(OBJEXT) \
	channel_density_vs_noise_variance_second_version.$(OBJEXT) \
	channel_density_vs_noise_variance_third_version.$(OBJEXT) \
	channel_spike_trigger_2.$(OBJEXT) \
	channel_spike_trigger.$(OBJEXT) diffusion_signalling.$(OBJEXT) \
	diffusion_vs_wave_signalling.$(OBJEXT) \
	dynamic_flight.$(OBJEXT) flying_demo.$(OBJEXT) \
	flying_through.$(OBJEXT) \
	gaussian_isi_spikes_on_deterministic_axon.$(OBJEXT) \
	gaussian_isi_spikes_on_langevin_axon.$(OBJEXT) \
	hh_sodium_channel_model.$(OBJEXT) \
	hranvier_sodium_channel_model.$(OBJEXT) \
	ion_channels_and_open_state_variance.$(OBJEXT) \
	MembraneFluctuationsStHH.$(OBJEXT) \
	merge_text_file_columns.$(OBJEXT) modigliani_core.$(OBJEXT) \
	multi_compartment_neuron.$(OBJEXT) nt3d_drv_test.$(OBJEXT) \
	nt3d_glx_test.$(OBJEXT) \
	ntg_grandom_graph_efficiency_study.$(OBJEXT) \
	ntg_ring_graph_test.$(OBJEXT) ntg_test.$(OBJEXT) \
	patlak_sodium_channel_model.$(OBJEXT) \
	performance_current_classes_comparison.$(OBJEXT) \
	planetary_demo.$(OBJEXT) resting_potential_noise.$(OBJEXT) \
	saltatory_conduction.$(OBJEXT) \
	single_compartment_spiker.$(OBJEXT) somasimulator-v1.$(OBJEXT) \
	somasimulator-v1-SGA.$(OBJEXT) spheric_flying_demo.$(OBJEXT) \
	stochastic_ion_channels.$(OBJEXT) template.$(OBJEXT) \
	test_code.$(OBJEXT) test_graph_distance_stats.$(OBJEXT) \
	test_membrane_currents.$(OBJEXT) tunnel_flight_demo.$(OBJEXT) \
	WhiteNoise1.0e-8StHH.$(OBJEXT) \
	WhiteNoiseMultiCOmpartmentSImulationWithCompartmentVoltageHistogramming.$(OBJEXT) \
	myelinaxonsimulator-v1.$(OBJEXT)
libexamples_a_OBJECTS = $(am_libexamples_a_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_MembraneFluctuationsStHH_OBJECTS =  \
	MembraneFluctuationsStHH.$(OBJEXT)
MembraneFluctuationsStHH_OBJECTS =  \
	$(am_MembraneFluctuationsStHH_OBJECTS)
MembraneFluctuationsStHH_DEPENDENCIES = ../nt3dsrc/libnt3dsrc.a \
	../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_WhiteNoise1_0e_8StHH_OBJECTS = WhiteNoise1.0e-8StHH.$(OBJEXT)
WhiteNoise1_0e_8StHH_OBJECTS = $(am_WhiteNoise1_0e_8StHH_OBJECTS)
WhiteNoise1_0e_8StHH_DEPENDENCIES = ../nt3dsrc/libnt3dsrc.a \
	../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_WhiteNoiseMultiCOmpartmentSImulationWithCompartmentVoltageHistogramming_OBJECTS = WhiteNoiseMultiCOmpartmentSImulationWithCompartmentVoltageHistogramming.$(OBJEXT)
WhiteNoiseMultiCOmpartmentSImulationWithCompartmentVoltageHistogramming_OBJECTS = $(am_WhiteNoiseMultiCOmpartmentSImulationWithCompartmentVoltageHistogramming_OBJECTS)
WhiteNoiseMultiCOmpartmentSImulationWithCompartmentVoltageHistogramming_DEPENDENCIES =  \
	../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a \
	../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a
am_analyse_binary_data_for_isi_with_histogram_OBJECTS =  \
	analyse_binary_data_for_isi_with_histogram.$(OBJEXT)
analyse_binary_data_for_isi_with_histogram_OBJECTS =  \
	$(am_analyse_binary_data_for_isi_with_histogram_OBJECTS)
analyse_binary_data_for_isi_with_histogram_DEPENDENCIES =  \
	../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a \
	../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a
am_basic_glx_demo_OBJECTS = basic_glx_demo.$(OBJEXT)
basic_glx_demo_OBJECTS = $(am_basic_glx_demo_OBJECTS)
basic_glx_demo_DEPENDENCIES = ../nt3dsrc/libnt3dsrc.a \
	../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_channel_density_vs_noise_variance_OBJECTS =  \
	channel_density_vs_noise_variance.$(OBJEXT)
channel_density_vs_noise_variance_OBJECTS =  \
	$(am_channel_density_vs_noise_variance_OBJECTS)
channel_density_vs_noise_variance_DEPENDENCIES =  \
	../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a \
	../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a
am_channel_spike_trigger_OBJECTS = channel_spike_trigger.$(OBJEXT)
channel_spike_trigger_OBJECTS = $(am_channel_spike_trigger_OBJECTS)
channel_spike_trigger_DEPENDENCIES = ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_diffusion_signalling_OBJECTS = diffusion_signalling.$(OBJEXT)
diffusion_signalling_OBJECTS = $(am_diffusion_signalling_OBJECTS)
diffusion_signalling_DEPENDENCIES = ../nt3dsrc/libnt3dsrc.a \
	../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_diffusion_vs_wave_signalling_OBJECTS =  \
	diffusion_vs_wave_signalling.$(OBJEXT)
diffusion_vs_wave_signalling_OBJECTS =  \
	$(am_diffusion_vs_wave_signalling_OBJECTS)
diffusion_vs_wave_signalling_DEPENDENCIES = ../nt3dsrc/libnt3dsrc.a \
	../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_dynamic_flight_OBJECTS = dynamic_flight.$(OBJEXT)
dynamic_flight_OBJECTS = $(am_dynamic_flight_OBJECTS)
dynamic_flight_DEPENDENCIES = ../nt3dsrc/libnt3dsrc.a \
	../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_flying_demo_OBJECTS = flying_demo.$(OBJEXT)
flying_demo_OBJECTS = $(am_flying_demo_OBJECTS)
flying_demo_DEPENDENCIES = ../nt3dsrc/libnt3dsrc.a \
	../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_flying_through_OBJECTS = flying_through.$(OBJEXT)
flying_through_OBJECTS = $(am_flying_through_OBJECTS)
flying_through_DEPENDENCIES = ../nt3dsrc/libnt3dsrc.a \
	../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_gaussian_isi_spikes_on_deterministic_axon_OBJECTS =  \
	gaussian_isi_spikes_on_deterministic_axon.$(OBJEXT)
gaussian_isi_spikes_on_deterministic_axon_OBJECTS =  \
	$(am_gaussian_isi_spikes_on_deterministic_axon_OBJECTS)
gaussian_isi_spikes_on_deterministic_axon_DEPENDENCIES =  \
	../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a \
	../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a
am_gaussian_isi_spikes_on_langevin_axon_OBJECTS =  \
	gaussian_isi_spikes_on_langevin_axon.$(OBJEXT)
gaussian_isi_spikes_on_langevin_axon_OBJECTS =  \
	$(am_gaussian_isi_spikes_on_langevin_axon_OBJECTS)
gaussian_isi_spikes_on_langevin_axon_DEPENDENCIES =  \
	../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a \
	../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a
am_hh_sodium_channel_model_OBJECTS =  \
	hh_sodium_channel_model.$(OBJEXT)
hh_sodium_channel_model_OBJECTS =  \
	$(am_hh_sodium_channel_model_OBJECTS)
hh_sodium_channel_model_DEPENDENCIES = ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_hranvier_sodium_channel_model_OBJECTS =  \
	hranvier_sodium_channel_model.$(OBJEXT)
hranvier_sodium_channel_model_OBJECTS =  \
	$(am_hranvier_sodium_channel_model_OBJECTS)
hranvier_sodium_channel_model_DEPENDENCIES = ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_ion_channels_and_open_state_variance_OBJECTS =  \
	ion_channels_and_open_state_variance.$(OBJEXT)
ion_channels_and_open_state_variance_OBJECTS =  \
	$(am_ion_channels_and_open_state_variance_OBJECTS)
ion_channels_and_open_state_variance_DEPENDENCIES =  \
	../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a \
	../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a
am_merge_text_file_columns_OBJECTS =  \
	merge_text_file_columns.$(OBJEXT)
merge_text_file_columns_OBJECTS =  \
	$(am_merge_text_file_columns_OBJECTS)
merge_text_file_columns_DEPENDENCIES = ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_multi_compartment_neuron_OBJECTS =  \
	multi_compartment_neuron.$(OBJEXT)
multi_compartment_neuron_OBJECTS =  \
	$(am_multi_compartment_neuron_OBJECTS)
multi_compartment_neuron_DEPENDENCIES = ../nt3dsrc/libnt3dsrc.a \
	../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_myelinaxonsimulator_v1_OBJECTS = myelinaxonsimulator-v1.$(OBJEXT)
myelinaxonsimulator_v1_OBJECTS = $(am_myelinaxonsimulator_v1_OBJECTS)
myelinaxonsimulator_v1_DEPENDENCIES = ../nt3dsrc/libnt3dsrc.a \
	../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_nt3d_drv_test_OBJECTS = nt3d_drv_test.$(OBJEXT)
nt3d_drv_test_OBJECTS = $(am_nt3d_drv_test_OBJECTS)
nt3d_drv_test_DEPENDENCIES = ../nt3dsrc/libnt3dsrc.a \
	../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_nt3d_glx_test_OBJECTS = nt3d_glx_test.$(OBJEXT)
nt3d_glx_test_OBJECTS = $(am_nt3d_glx_test_OBJECTS)
nt3d_glx_test_DEPENDENCIES = ../nt3dsrc/libnt3dsrc.a \
	../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_ntg_grandom_graph_efficiency_study_OBJECTS =  \
	ntg_grandom_graph_efficiency_study.$(OBJEXT)
ntg_grandom_graph_efficiency_study_OBJECTS =  \
	$(am_ntg_grandom_graph_efficiency_study_OBJECTS)
ntg_grandom_graph_efficiency_study_DEPENDENCIES =  \
	../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a \
	../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a
am_ntg_ring_graph_test_OBJECTS = ntg_ring_graph_test.$(OBJEXT)
ntg_ring_graph_test_OBJECTS = $(am_ntg_ring_graph_test_OBJECTS)
ntg_ring_graph_test_DEPENDENCIES = ../ntgsrc/libntgsrc.a \
	../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a
am_ntg_test_OBJECTS = ntg_test.$(OBJEXT)
ntg_test_OBJECTS = $(am_ntg_test_OBJECTS)
ntg_test_DEPENDENCIES = ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_patlak_sodium_channel_model_OBJECTS =  \
	patlak_sodium_channel_model.$(OBJEXT)
patlak_sodium_channel_model_OBJECTS =  \
	$(am_patlak_sodium_channel_model_OBJECTS)
patlak_sodium_channel_model_DEPENDENCIES = ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_performance_current_classes_comparison_OBJECTS =  \
	performance_current_classes_comparison.$(OBJEXT)
performance_current_classes_comparison_OBJECTS =  \
	$(am_performance_current_classes_comparison_OBJECTS)
performance_current_classes_comparison_DEPENDENCIES =  \
	../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a
am_planetary_demo_OBJECTS = planetary_demo.$(OBJEXT)
planetary_demo_OBJECTS = $(am_planetary_demo_OBJECTS)
planetary_demo_DEPENDENCIES = ../nt3dsrc/libnt3dsrc.a \
	../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_resting_potential_noise_OBJECTS =  \
	resting_potential_noise.$(OBJEXT)
resting_potential_noise_OBJECTS =  \
	$(am_resting_potential_noise_OBJECTS)
resting_potential_noise_DEPENDENCIES = ../nt3dsrc/libnt3dsrc.a \
	../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_saltatory_conduction_OBJECTS = saltatory_conduction.$(OBJEXT)
saltatory_conduction_OBJECTS = $(am_saltatory_conduction_OBJECTS)
saltatory_conduction_DEPENDENCIES = ../nt3dsrc/libnt3dsrc.a \
	../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_single_compartment_spiker_OBJECTS =  \
	single_compartment_spiker.$(OBJEXT)
single_compartment_spiker_OBJECTS =  \
	$(am_single_compartment_spiker_OBJECTS)
single_compartment_spiker_DEPENDENCIES = ../nt3dsrc/libnt3dsrc.a \
	../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_somasimulator_v1_OBJECTS = somasimulator-v1.$(OBJEXT)
somasimulator_v1_OBJECTS = $(am_somasimulator_v1_OBJECTS)
somasimulator_v1_DEPENDENCIES = ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_somasimulator_v1_SGA_OBJECTS = somasimulator-v1-SGA.$(OBJEXT)
somasimulator_v1_SGA_OBJECTS = $(am_somasimulator_v1_SGA_OBJECTS)
somasimulator_v1_SGA_DEPENDENCIES = ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_spheric_flying_demo_OBJECTS = spheric_flying_demo.$(OBJEXT)
spheric_flying_demo_OBJECTS = $(am_spheric_flying_demo_OBJECTS)
spheric_flying_demo_DEPENDENCIES = ../nt3dsrc/libnt3dsrc.a \
	../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_stochastic_ion_channels_OBJECTS =  \
	stochastic_ion_channels.$(OBJEXT)
stochastic_ion_channels_OBJECTS =  \
	$(am_stochastic_ion_channels_OBJECTS)
stochastic_ion_channels_DEPENDENCIES = ../nt3dsrc/libnt3dsrc.a \
	../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_test_code_OBJECTS = test_code.$(OBJEXT)
test_code_OBJECTS = $(am_test_code_OBJECTS)
test_code_DEPENDENCIES = ../ntsrc/libntsrc.a
am_test_graph_distance_stats_OBJECTS =  \
	test_graph_distance_stats.$(OBJEXT)
test_graph_distance_stats_OBJECTS =  \
	$(am_test_graph_distance_stats_OBJECTS)
test_graph_distance_stats_DEPENDENCIES = ../nt3dsrc/libnt3dsrc.a \
	../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_test_membrane_currents_OBJECTS = test_membrane_currents.$(OBJEXT)
test_membrane_currents_OBJECTS = $(am_test_membrane_currents_OBJECTS)
test_membrane_currents_DEPENDENCIES = ../nt3dsrc/libnt3dsrc.a \
	../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
am_tunnel_flight_demo_OBJECTS = tunnel_flight_demo.$(OBJEXT)
tunnel_flight_demo_OBJECTS = $(am_tunnel_flight_demo_OBJECTS)
tunnel_flight_demo_DEPENDENCIES = ../nt3dsrc/libnt3dsrc.a \
	../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a \
	../ntsrc/libntsrc.a
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(libexamples_a_SOURCES) $(MembraneFluctuationsStHH_SOURCES) \
	$(WhiteNoise1_0e_8StHH_SOURCES) \
	$(WhiteNoiseMultiCOmpartmentSImulationWithCompartmentVoltageHistogramming_SOURCES) \
	$(analyse_binary_data_for_isi_with_histogram_SOURCES) \
	$(basic_glx_demo_SOURCES) \
	$(channel_density_vs_noise_variance_SOURCES) \
	$(channel_spike_trigger_SOURCES) \
	$(diffusion_signalling_SOURCES) \
	$(diffusion_vs_wave_signalling_SOURCES) \
	$(dynamic_flight_SOURCES) $(flying_demo_SOURCES) \
	$(flying_through_SOURCES) \
	$(gaussian_isi_spikes_on_deterministic_axon_SOURCES) \
	$(gaussian_isi_spikes_on_langevin_axon_SOURCES) \
	$(hh_sodium_channel_model_SOURCES) \
	$(hranvier_sodium_channel_model_SOURCES) \
	$(ion_channels_and_open_state_variance_SOURCES) \
	$(merge_text_file_columns_SOURCES) \
	$(multi_compartment_neuron_SOURCES) \
	$(myelinaxonsimulator_v1_SOURCES) $(nt3d_drv_test_SOURCES) \
	$(nt3d_glx_test_SOURCES) \
	$(ntg_grandom_graph_efficiency_study_SOURCES) \
	$(ntg_ring_graph_test_SOURCES) $(ntg_test_SOURCES) \
	$(patlak_sodium_channel_model_SOURCES) \
	$(performance_current_classes_comparison_SOURCES) \
	$(planetary_demo_SOURCES) $(resting_potential_noise_SOURCES) \
	$(saltatory_conduction_SOURCES) \
	$(single_compartment_spiker_SOURCES) \
	$(somasimulator_v1_SOURCES) $(somasimulator_v1_SGA_SOURCES) \
	$(spheric_flying_demo_SOURCES) \
	$(stochastic_ion_channels_SOURCES) $(test_code_SOURCES) \
	$(test_graph_distance_stats_SOURCES) \
	$(test_membrane_currents_SOURCES) \
	$(tunnel_flight_demo_SOURCES)
DIST_SOURCES = $(libexamples_a_SOURCES) \
	$(MembraneFluctuationsStHH_SOURCES) \
	$(WhiteNoise1_0e_8StHH_SOURCES) \
	$(WhiteNoiseMultiCOmpartmentSImulationWithCompartmentVoltageHistogramming_SOURCES) \
	$(analyse_binary_data_for_isi_with_histogram_SOURCES) \
	$(basic_glx_demo_SOURCES) \
	$(channel_density_vs_noise_variance_SOURCES) \
	$(channel_spike_trigger_SOURCES) \
	$(diffusion_signalling_SOURCES) \
	$(diffusion_vs_wave_signalling_SOURCES) \
	$(dynamic_flight_SOURCES) $(flying_demo_SOURCES) \
	$(flying_through_SOURCES) \
	$(gaussian_isi_spikes_on_deterministic_axon_SOURCES) \
	$(gaussian_isi_spikes_on_langevin_axon_SOURCES) \
	$(hh_sodium_channel_model_SOURCES) \
	$(hranvier_sodium_channel_model_SOURCES) \
	$(ion_channels_and_open_state_variance_SOURCES) \
	$(merge_text_file_columns_SOURCES) \
	$(multi_compartment_neuron_SOURCES) \
	$(myelinaxonsimulator_v1_SOURCES) $(nt3d_drv_test_SOURCES) \
	$(nt3d_glx_test_SOURCES) \
	$(ntg_grandom_graph_efficiency_study_SOURCES) \
	$(ntg_ring_graph_test_SOURCES) $(ntg_test_SOURCES) \
	$(patlak_sodium_channel_model_SOURCES) \
	$(performance_current_classes_comparison_SOURCES) \
	$(planetary_demo_SOURCES) $(resting_potential_noise_SOURCES) \
	$(saltatory_conduction_SOURCES) \
	$(single_compartment_spiker_SOURCES) \
	$(somasimulator_v1_SOURCES) $(somasimulator_v1_SGA_SOURCES) \
	$(spheric_flying_demo_SOURCES) \
	$(stochastic_ion_channels_SOURCES) $(test_code_SOURCES) \
	$(test_graph_distance_stats_SOURCES) \
	$(test_membrane_currents_SOURCES) \
	$(tunnel_flight_demo_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
XMKMF = @XMKMF@
YACC = @YACC@
YFLAGS = @YFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

####### kdevelop will overwrite this part!!! (begin)##########
noinst_LIBRARIES = libexamples.a
libexamples_a_SOURCES =  \
	analyse_binary_data_for_isi_with_histogram.cpp \
	basic_glx_demo.cpp channel_density_vs_noise_variance.cpp \
	channel_density_vs_noise_variance_second_version.cpp \
	channel_density_vs_noise_variance_third_version.cpp \
	channel_spike_trigger_2.cpp channel_spike_trigger.cpp \
	diffusion_signalling.cpp diffusion_vs_wave_signalling.cpp \
	dynamic_flight.cpp flying_demo.cpp flying_through.cpp \
	gaussian_isi_spikes_on_deterministic_axon.cpp \
	gaussian_isi_spikes_on_langevin_axon.cpp \
	hh_sodium_channel_model.cpp hranvier_sodium_channel_model.cpp \
	ion_channels_and_open_state_variance.cpp \
	MembraneFluctuationsStHH.cpp merge_text_file_columns.cpp \
	modigliani_core.cpp multi_compartment_neuron.cpp \
	nt3d_drv_test.cpp nt3d_glx_test.cpp \
	ntg_grandom_graph_efficiency_study.cpp ntg_ring_graph_test.cpp \
	ntg_test.cpp patlak_sodium_channel_model.cpp \
	performance_current_classes_comparison.cpp planetary_demo.cpp \
	resting_potential_noise.cpp saltatory_conduction.cpp \
	single_compartment_spiker.cpp somasimulator-v1.cpp \
	somasimulator-v1-SGA.cpp spheric_flying_demo.cpp \
	stochastic_ion_channels.cpp template.cpp test_code.cpp \
	test_graph_distance_stats.cpp test_membrane_currents.cpp \
	tunnel_flight_demo.cpp WhiteNoise1.0e-8StHH.cpp \
	WhiteNoiseMultiCOmpartmentSImulationWithCompartmentVoltageHistogramming.cpp \
	myelinaxonsimulator-v1.cpp
basic_glx_demo_SOURCES = basic_glx_demo.cpp
basic_glx_demo_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
planetary_demo_SOURCES = planetary_demo.cpp
planetary_demo_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a  -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
tunnel_flight_demo_SOURCES = tunnel_flight_demo.cpp
tunnel_flight_demo_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a  -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
analyse_binary_data_for_isi_with_histogram_SOURCES = analyse_binary_data_for_isi_with_histogram.cpp
analyse_binary_data_for_isi_with_histogram_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a  -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
ntg_grandom_graph_efficiency_study_SOURCES = ntg_grandom_graph_efficiency_study.cpp
ntg_grandom_graph_efficiency_study_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a  ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
test_membrane_currents_SOURCES = test_membrane_currents.cpp
test_membrane_currents_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
dynamic_flight_SOURCES = dynamic_flight.cpp
dynamic_flight_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
gaussian_isi_spikes_on_deterministic_axon_SOURCES = gaussian_isi_spikes_on_deterministic_axon.cpp
gaussian_isi_spikes_on_deterministic_axon_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
gaussian_isi_spikes_on_langevin_axon_SOURCES = gaussian_isi_spikes_on_langevin_axon.cpp
gaussian_isi_spikes_on_langevin_axon_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
MembraneFluctuationsStHH_SOURCES = MembraneFluctuationsStHH.cpp
MembraneFluctuationsStHH_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
ion_channels_and_open_state_variance_SOURCES = ion_channels_and_open_state_variance.cpp
ion_channels_and_open_state_variance_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
multi_compartment_neuron_SOURCES = multi_compartment_neuron.cpp
multi_compartment_neuron_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
channel_density_vs_noise_variance_SOURCES = channel_density_vs_noise_variance.cpp
channel_density_vs_noise_variance_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
nt3d_drv_test_SOURCES = nt3d_drv_test.cpp
nt3d_drv_test_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
nt3d_glx_test_SOURCES = nt3d_glx_test.cpp
nt3d_glx_test_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
test_graph_distance_stats_SOURCES = test_graph_distance_stats.cpp
test_graph_distance_stats_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
resting_potential_noise_SOURCES = resting_potential_noise.cpp
resting_potential_noise_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
saltatory_conduction_SOURCES = saltatory_conduction.cpp
saltatory_conduction_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
WhiteNoiseMultiCOmpartmentSImulationWithCompartmentVoltageHistogramming_SOURCES = WhiteNoiseMultiCOmpartmentSImulationWithCompartmentVoltageHistogramming.cpp
WhiteNoiseMultiCOmpartmentSImulationWithCompartmentVoltageHistogramming_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
myelinaxonsimulator_v1_SOURCES = myelinaxonsimulator-v1.cpp
myelinaxonsimulator_v1_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
single_compartment_spiker_SOURCES = single_compartment_spiker.cpp
single_compartment_spiker_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
spheric_flying_demo_SOURCES = spheric_flying_demo.cpp
spheric_flying_demo_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
stochastic_ion_channels_SOURCES = stochastic_ion_channels.cpp
stochastic_ion_channels_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
WhiteNoise1_0e_8StHH_SOURCES = WhiteNoise1.0e-8StHH.cpp
WhiteNoise1_0e_8StHH_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
flying_through_SOURCES = flying_through.cpp
flying_through_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
flying_demo_SOURCES = flying_demo.cpp
flying_demo_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
ntg_test_SOURCES = ntg_test.cpp
ntg_test_LDADD = ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
ntg_ring_graph_test_SOURCES = ntg_ring_graph_test.cpp
ntg_ring_graph_test_LDADD = ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
merge_text_file_columns_SOURCES = merge_text_file_columns.cpp
merge_text_file_columns_LDADD = ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
diffusion_vs_wave_signalling_SOURCES = diffusion_vs_wave_signalling.cpp
diffusion_vs_wave_signalling_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
diffusion_signalling_SOURCES = diffusion_signalling.cpp
diffusion_signalling_LDADD = ../nt3dsrc/libnt3dsrc.a ../ntgsrc/libntgsrc.a ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a -L/usr/X11R6/lib -lGL -L/usr/X11R6/lib -lGLU -lm -lXext -lX11
test_code_SOURCES = test_code.cpp
test_code_LDADD = ../ntsrc/libntsrc.a
channel_spike_trigger_SOURCES = channel_spike_trigger.cpp
channel_spike_trigger_LDADD = ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a  -lm
patlak_sodium_channel_model_SOURCES = patlak_sodium_channel_model.cpp
patlak_sodium_channel_model_LDADD = ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a  -lm
hh_sodium_channel_model_SOURCES = hh_sodium_channel_model.cpp
hh_sodium_channel_model_LDADD = ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a  -lm
hranvier_sodium_channel_model_SOURCES = hranvier_sodium_channel_model.cpp
hranvier_sodium_channel_model_LDADD = ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a  -lm
performance_current_classes_comparison_SOURCES = performance_current_classes_comparison.cpp
performance_current_classes_comparison_LDADD = ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a  -lm
somasimulator_v1_SGA_SOURCES = somasimulator-v1-SGA.cpp
somasimulator_v1_SGA_LDADD = ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a  -lm
somasimulator_v1_SOURCES = somasimulator-v1.cpp
somasimulator_v1_LDADD = ../ntbpsrc/libntbpsrc.a ../ntsrc/libntsrc.a  -lm

# set the include path found by configure
INCLUDES = $(all_includes)

# the library search path.
AM_LDFLAGS = $(all_libraries)
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign nettrader/examples/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign nettrader/examples/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libexamples.a: $(libexamples_a_OBJECTS) $(libexamples_a_DEPENDENCIES) 
	-rm -f libexamples.a
	$(libexamples_a_AR) libexamples.a $(libexamples_a_OBJECTS) $(libexamples_a_LIBADD)
	$(RANLIB) libexamples.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
MembraneFluctuationsStHH$(EXEEXT): $(MembraneFluctuationsStHH_OBJECTS) $(MembraneFluctuationsStHH_DEPENDENCIES) 
	@rm -f MembraneFluctuationsStHH$(EXEEXT)
	$(CXXLINK) $(MembraneFluctuationsStHH_OBJECTS) $(MembraneFluctuationsStHH_LDADD) $(LIBS)
WhiteNoise1.0e-8StHH$(EXEEXT): $(WhiteNoise1_0e_8StHH_OBJECTS) $(WhiteNoise1_0e_8StHH_DEPENDENCIES) 
	@rm -f WhiteNoise1.0e-8StHH$(EXEEXT)
	$(CXXLINK) $(WhiteNoise1_0e_8StHH_OBJECTS) $(WhiteNoise1_0e_8StHH_LDADD) $(LIBS)
WhiteNoiseMultiCOmpartmentSImulationWithCompartmentVoltageHistogramming$(EXEEXT): $(WhiteNoiseMultiCOmpartmentSImulationWithCompartmentVoltageHistogramming_OBJECTS) $(WhiteNoiseMultiCOmpartmentSImulationWithCompartmentVoltageHistogramming_DEPENDENCIES) 
	@rm -f WhiteNoiseMultiCOmpartmentSImulationWithCompartmentVoltageHistogramming$(EXEEXT)
	$(CXXLINK) $(WhiteNoiseMultiCOmpartmentSImulationWithCompartmentVoltageHistogramming_OBJECTS) $(WhiteNoiseMultiCOmpartmentSImulationWithCompartmentVoltageHistogramming_LDADD) $(LIBS)
analyse_binary_data_for_isi_with_histogram$(EXEEXT): $(analyse_binary_data_for_isi_with_histogram_OBJECTS) $(analyse_binary_data_for_isi_with_histogram_DEPENDENCIES) 
	@rm -f analyse_binary_data_for_isi_with_histogram$(EXEEXT)
	$(CXXLINK) $(analyse_binary_data_for_isi_with_histogram_OBJECTS) $(analyse_binary_data_for_isi_with_histogram_LDADD) $(LIBS)
basic_glx_demo$(EXEEXT): $(basic_glx_demo_OBJECTS) $(basic_glx_demo_DEPENDENCIES) 
	@rm -f basic_glx_demo$(EXEEXT)
	$(CXXLINK) $(basic_glx_demo_OBJECTS) $(basic_glx_demo_LDADD) $(LIBS)
channel_density_vs_noise_variance$(EXEEXT): $(channel_density_vs_noise_variance_OBJECTS) $(channel_density_vs_noise_variance_DEPENDENCIES) 
	@rm -f channel_density_vs_noise_variance$(EXEEXT)
	$(CXXLINK) $(channel_density_vs_noise_variance_OBJECTS) $(channel_density_vs_noise_variance_LDADD) $(LIBS)
channel_spike_trigger$(EXEEXT): $(channel_spike_trigger_OBJECTS) $(channel_spike_trigger_DEPENDENCIES) 
	@rm -f channel_spike_trigger$(EXEEXT)
	$(CXXLINK) $(channel_spike_trigger_OBJECTS) $(channel_spike_trigger_LDADD) $(LIBS)
diffusion_signalling$(EXEEXT): $(diffusion_signalling_OBJECTS) $(diffusion_signalling_DEPENDENCIES) 
	@rm -f diffusion_signalling$(EXEEXT)
	$(CXXLINK) $(diffusion_signalling_OBJECTS) $(diffusion_signalling_LDADD) $(LIBS)
diffusion_vs_wave_signalling$(EXEEXT): $(diffusion_vs_wave_signalling_OBJECTS) $(diffusion_vs_wave_signalling_DEPENDENCIES) 
	@rm -f diffusion_vs_wave_signalling$(EXEEXT)
	$(CXXLINK) $(diffusion_vs_wave_signalling_OBJECTS) $(diffusion_vs_wave_signalling_LDADD) $(LIBS)
dynamic_flight$(EXEEXT): $(dynamic_flight_OBJECTS) $(dynamic_flight_DEPENDENCIES) 
	@rm -f dynamic_flight$(EXEEXT)
	$(CXXLINK) $(dynamic_flight_OBJECTS) $(dynamic_flight_LDADD) $(LIBS)
flying_demo$(EXEEXT): $(flying_demo_OBJECTS) $(flying_demo_DEPENDENCIES) 
	@rm -f flying_demo$(EXEEXT)
	$(CXXLINK) $(flying_demo_OBJECTS) $(flying_demo_LDADD) $(LIBS)
flying_through$(EXEEXT): $(flying_through_OBJECTS) $(flying_through_DEPENDENCIES) 
	@rm -f flying_through$(EXEEXT)
	$(CXXLINK) $(flying_through_OBJECTS) $(flying_through_LDADD) $(LIBS)
gaussian_isi_spikes_on_deterministic_axon$(EXEEXT): $(gaussian_isi_spikes_on_deterministic_axon_OBJECTS) $(gaussian_isi_spikes_on_deterministic_axon_DEPENDENCIES) 
	@rm -f gaussian_isi_spikes_on_deterministic_axon$(EXEEXT)
	$(CXXLINK) $(gaussian_isi_spikes_on_deterministic_axon_OBJECTS) $(gaussian_isi_spikes_on_deterministic_axon_LDADD) $(LIBS)
gaussian_isi_spikes_on_langevin_axon$(EXEEXT): $(gaussian_isi_spikes_on_langevin_axon_OBJECTS) $(gaussian_isi_spikes_on_langevin_axon_DEPENDENCIES) 
	@rm -f gaussian_isi_spikes_on_langevin_axon$(EXEEXT)
	$(CXXLINK) $(gaussian_isi_spikes_on_langevin_axon_OBJECTS) $(gaussian_isi_spikes_on_langevin_axon_LDADD) $(LIBS)
hh_sodium_channel_model$(EXEEXT): $(hh_sodium_channel_model_OBJECTS) $(hh_sodium_channel_model_DEPENDENCIES) 
	@rm -f hh_sodium_channel_model$(EXEEXT)
	$(CXXLINK) $(hh_sodium_channel_model_OBJECTS) $(hh_sodium_channel_model_LDADD) $(LIBS)
hranvier_sodium_channel_model$(EXEEXT): $(hranvier_sodium_channel_model_OBJECTS) $(hranvier_sodium_channel_model_DEPENDENCIES) 
	@rm -f hranvier_sodium_channel_model$(EXEEXT)
	$(CXXLINK) $(hranvier_sodium_channel_model_OBJECTS) $(hranvier_sodium_channel_model_LDADD) $(LIBS)
ion_channels_and_open_state_variance$(EXEEXT): $(ion_channels_and_open_state_variance_OBJECTS) $(ion_channels_and_open_state_variance_DEPENDENCIES) 
	@rm -f ion_channels_and_open_state_variance$(EXEEXT)
	$(CXXLINK) $(ion_channels_and_open_state_variance_OBJECTS) $(ion_channels_and_open_state_variance_LDADD) $(LIBS)
merge_text_file_columns$(EXEEXT): $(merge_text_file_columns_OBJECTS) $(merge_text_file_columns_DEPENDENCIES) 
	@rm -f merge_text_file_columns$(EXEEXT)
	$(CXXLINK) $(merge_text_file_columns_OBJECTS) $(merge_text_file_columns_LDADD) $(LIBS)
multi_compartment_neuron$(EXEEXT): $(multi_compartment_neuron_OBJECTS) $(multi_compartment_neuron_DEPENDENCIES) 
	@rm -f multi_compartment_neuron$(EXEEXT)
	$(CXXLINK) $(multi_compartment_neuron_OBJECTS) $(multi_compartment_neuron_LDADD) $(LIBS)
myelinaxonsimulator-v1$(EXEEXT): $(myelinaxonsimulator_v1_OBJECTS) $(myelinaxonsimulator_v1_DEPENDENCIES) 
	@rm -f myelinaxonsimulator-v1$(EXEEXT)
	$(CXXLINK) $(myelinaxonsimulator_v1_OBJECTS) $(myelinaxonsimulator_v1_LDADD) $(LIBS)
nt3d_drv_test$(EXEEXT): $(nt3d_drv_test_OBJECTS) $(nt3d_drv_test_DEPENDENCIES) 
	@rm -f nt3d_drv_test$(EXEEXT)
	$(CXXLINK) $(nt3d_drv_test_OBJECTS) $(nt3d_drv_test_LDADD) $(LIBS)
nt3d_glx_test$(EXEEXT): $(nt3d_glx_test_OBJECTS) $(nt3d_glx_test_DEPENDENCIES) 
	@rm -f nt3d_glx_test$(EXEEXT)
	$(CXXLINK) $(nt3d_glx_test_OBJECTS) $(nt3d_glx_test_LDADD) $(LIBS)
ntg_grandom_graph_efficiency_study$(EXEEXT): $(ntg_grandom_graph_efficiency_study_OBJECTS) $(ntg_grandom_graph_efficiency_study_DEPENDENCIES) 
	@rm -f ntg_grandom_graph_efficiency_study$(EXEEXT)
	$(CXXLINK) $(ntg_grandom_graph_efficiency_study_OBJECTS) $(ntg_grandom_graph_efficiency_study_LDADD) $(LIBS)
ntg_ring_graph_test$(EXEEXT): $(ntg_ring_graph_test_OBJECTS) $(ntg_ring_graph_test_DEPENDENCIES) 
	@rm -f ntg_ring_graph_test$(EXEEXT)
	$(CXXLINK) $(ntg_ring_graph_test_OBJECTS) $(ntg_ring_graph_test_LDADD) $(LIBS)
ntg_test$(EXEEXT): $(ntg_test_OBJECTS) $(ntg_test_DEPENDENCIES) 
	@rm -f ntg_test$(EXEEXT)
	$(CXXLINK) $(ntg_test_OBJECTS) $(ntg_test_LDADD) $(LIBS)
patlak_sodium_channel_model$(EXEEXT): $(patlak_sodium_channel_model_OBJECTS) $(patlak_sodium_channel_model_DEPENDENCIES) 
	@rm -f patlak_sodium_channel_model$(EXEEXT)
	$(CXXLINK) $(patlak_sodium_channel_model_OBJECTS) $(patlak_sodium_channel_model_LDADD) $(LIBS)
performance_current_classes_comparison$(EXEEXT): $(performance_current_classes_comparison_OBJECTS) $(performance_current_classes_comparison_DEPENDENCIES) 
	@rm -f performance_current_classes_comparison$(EXEEXT)
	$(CXXLINK) $(performance_current_classes_comparison_OBJECTS) $(performance_current_classes_comparison_LDADD) $(LIBS)
planetary_demo$(EXEEXT): $(planetary_demo_OBJECTS) $(planetary_demo_DEPENDENCIES) 
	@rm -f planetary_demo$(EXEEXT)
	$(CXXLINK) $(planetary_demo_OBJECTS) $(planetary_demo_LDADD) $(LIBS)
resting_potential_noise$(EXEEXT): $(resting_potential_noise_OBJECTS) $(resting_potential_noise_DEPENDENCIES) 
	@rm -f resting_potential_noise$(EXEEXT)
	$(CXXLINK) $(resting_potential_noise_OBJECTS) $(resting_potential_noise_LDADD) $(LIBS)
saltatory_conduction$(EXEEXT): $(saltatory_conduction_OBJECTS) $(saltatory_conduction_DEPENDENCIES) 
	@rm -f saltatory_conduction$(EXEEXT)
	$(CXXLINK) $(saltatory_conduction_OBJECTS) $(saltatory_conduction_LDADD) $(LIBS)
single_compartment_spiker$(EXEEXT): $(single_compartment_spiker_OBJECTS) $(single_compartment_spiker_DEPENDENCIES) 
	@rm -f single_compartment_spiker$(EXEEXT)
	$(CXXLINK) $(single_compartment_spiker_OBJECTS) $(single_compartment_spiker_LDADD) $(LIBS)
somasimulator-v1$(EXEEXT): $(somasimulator_v1_OBJECTS) $(somasimulator_v1_DEPENDENCIES) 
	@rm -f somasimulator-v1$(EXEEXT)
	$(CXXLINK) $(somasimulator_v1_OBJECTS) $(somasimulator_v1_LDADD) $(LIBS)
somasimulator-v1-SGA$(EXEEXT): $(somasimulator_v1_SGA_OBJECTS) $(somasimulator_v1_SGA_DEPENDENCIES) 
	@rm -f somasimulator-v1-SGA$(EXEEXT)
	$(CXXLINK) $(somasimulator_v1_SGA_OBJECTS) $(somasimulator_v1_SGA_LDADD) $(LIBS)
spheric_flying_demo$(EXEEXT): $(spheric_flying_demo_OBJECTS) $(spheric_flying_demo_DEPENDENCIES) 
	@rm -f spheric_flying_demo$(EXEEXT)
	$(CXXLINK) $(spheric_flying_demo_OBJECTS) $(spheric_flying_demo_LDADD) $(LIBS)
stochastic_ion_channels$(EXEEXT): $(stochastic_ion_channels_OBJECTS) $(stochastic_ion_channels_DEPENDENCIES) 
	@rm -f stochastic_ion_channels$(EXEEXT)
	$(CXXLINK) $(stochastic_ion_channels_OBJECTS) $(stochastic_ion_channels_LDADD) $(LIBS)
test_code$(EXEEXT): $(test_code_OBJECTS) $(test_code_DEPENDENCIES) 
	@rm -f test_code$(EXEEXT)
	$(CXXLINK) $(test_code_OBJECTS) $(test_code_LDADD) $(LIBS)
test_graph_distance_stats$(EXEEXT): $(test_graph_distance_stats_OBJECTS) $(test_graph_distance_stats_DEPENDENCIES) 
	@rm -f test_graph_distance_stats$(EXEEXT)
	$(CXXLINK) $(test_graph_distance_stats_OBJECTS) $(test_graph_distance_stats_LDADD) $(LIBS)
test_membrane_currents$(EXEEXT): $(test_membrane_currents_OBJECTS) $(test_membrane_currents_DEPENDENCIES) 
	@rm -f test_membrane_currents$(EXEEXT)
	$(CXXLINK) $(test_membrane_currents_OBJECTS) $(test_membrane_currents_LDADD) $(LIBS)
tunnel_flight_demo$(EXEEXT): $(tunnel_flight_demo_OBJECTS) $(tunnel_flight_demo_DEPENDENCIES) 
	@rm -f tunnel_flight_demo$(EXEEXT)
	$(CXXLINK) $(tunnel_flight_demo_OBJECTS) $(tunnel_flight_demo_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MembraneFluctuationsStHH.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WhiteNoise1.0e-8StHH.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WhiteNoiseMultiCOmpartmentSImulationWithCompartmentVoltageHistogramming.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/analyse_binary_data_for_isi_with_histogram.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/basic_glx_demo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/channel_density_vs_noise_variance.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/channel_density_vs_noise_variance_second_version.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/channel_density_vs_noise_variance_third_version.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/channel_spike_trigger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/channel_spike_trigger_2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/diffusion_signalling.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/diffusion_vs_wave_signalling.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dynamic_flight.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flying_demo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flying_through.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gaussian_isi_spikes_on_deterministic_axon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gaussian_isi_spikes_on_langevin_axon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hh_sodium_channel_model.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hranvier_sodium_channel_model.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ion_channels_and_open_state_variance.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/merge_text_file_columns.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/modigliani_core.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_compartment_neuron.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/myelinaxonsimulator-v1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nt3d_drv_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nt3d_glx_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ntg_grandom_graph_efficiency_study.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ntg_ring_graph_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ntg_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/patlak_sodium_channel_model.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/performance_current_classes_comparison.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/planetary_demo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/resting_potential_noise.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/saltatory_conduction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/single_compartment_spiker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/somasimulator-v1-SGA.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/somasimulator-v1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spheric_flying_demo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stochastic_ion_channels.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/template.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_code.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_graph_distance_stats.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_membrane_currents.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tunnel_flight_demo.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-data-local

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-local

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-noinstLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am \
	install-data-local install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-local


#EXTRA_DIST = AxonConduction.cpp MembraneFluctuationsStHH.cpp WhiteNoise1.0e-8StHH.cpp WhiteNoiseMultiCOmpartmentSImulationWithCompartmentVoltageHistogramming.cpp analyse_binary_data_for_isi_with_histogram.cpp basic_glx_demo.cpp channel_density_vs_noise_variance.cpp channel_density_vs_noise_variance_second_version.cpp channel_density_vs_noise_variance_third_version.cpp dynamic_flight.cpp flying_demo.cpp flying_through.cpp gaussian_isi_spikes_on_deterministic_axon.cpp gaussian_isi_spikes_on_langevin_axon.cpp ion_channels_and_open_state_variance.cpp multi_compartment_neuron.cpp nt3d_demo_glut_drv_obj.h nt3d_drv_test.cpp nt3d_glut_drv_test.h nt3d_glx_test.cpp ntg_grandom_graph_efficiency_study.cpp ntg_ring_graph_test.cpp ntg_test.cpp planetary_demo.cpp resting_potential_noise.cpp saltatory_conduction.cpp single_compartment_spiker.cpp spheric_flying_demo.cpp stochastic_ion_channels.cpp template.cpp test_graph_distance_stats.cpp test_membrane_currents.cpp tunnel_flight_demo.cpp merge_text_file_columns.cpp axon_simulation.cpp diffusion_vs_wave_signalling.cpp diffusion_signalling.cpp compute_joint_pdf_from_binary_data.cpp growing_graphs.cpp test_code.cpp deterministic_axon_simulator_experiment_aac.cpp stochastic_axon_simulator_experiment_aaf.cpp stochastic_axon_simulator_experiment_aae.cpp stochastic_axon_simulator_experiment_aaa.cpp stochastic_axon_simulator_experiment_aab.cpp stochastic_axon_simulator_experiment_aad.cpp stochastic_axon_simulator_experiment_aah.cpp stochastic_axon_simulator_experiment_aag.cpp stochastic_axon_simulator_experiment_aah_fine.cpp stochastic_axon_simulator_experiment_aal.cpp stochastic_axon_simulator_experiment_aak.cpp stochastic_axon_simulator_experiment_aai.cpp stochastic_axon_simulator_experiment_aam.cpp stochastic_axon_simulator_experiment_aan.cpp growing_graph.h Makefile.am axonsimulator-v1.cpp stochastic_axon_simulator_experiment_aanr5.cpp channel_spike_trigger.cpp channel_spike_trigger_2.cpp patlak_sodium_channel_model.cpp hh_sodium_channel_model.cpp hranvier_sodium_channel_model.cpp axonsimulator-v1-hranvier.cpp performance_current_classes_comparison.cpp axonsimulator-v1-colbert-axonal.cpp colbert_axonal_sodium_channel_model.cpp colbert_axonal_potassium_channel_model.cpp somasimulator-v1-SGA.cpp somasimulator-v1.cpp modigliani_core.cpp modigliani_model_format_grammar_t.h 

install-data-local:
	$(mkinstalldirs) ./
	$(INSTALL_DATA) $(srcdir)/basic_glx_demo.cpp ./basic_glx_demo

uninstall-local:
	-rm -f ./basic_glx_demo

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
