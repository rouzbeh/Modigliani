///**\file ntbp_sodium_ion_channels_obj.cpp - NTBP_sodium_ion_channels_o class implementation
// * by Ahmed Aldo Faisal &copy; created 15.3.2001
// */
///* NetTrader - visualisation, scientific and financial analysis and simulation system
// * Version:  0.7
// * Copyright (C) 1998,1999,2000 Ahmed Aldo Faisal
// *
// * This library is free software; you can redistribute it and/or
// * modify it under the terms of the GNU Library General Public
// * License as published by the Free Software Foundation; either
// * version 2 of the License, or (at your option) any later version.
// *
// * This library is distributed in the hope that it will be useful,
// * but WITHOUT ANY WARRANTY; without even the implied warranty of
// * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// * Library General Public License for more details.
// *
// * You should have received a copy of the GNU Library General Public
// * License along with this library; if not, write to the Free
// * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
// */
//
///* $Id: ntbp_sodium_ion_channels_obj.cpp,v 1.1.1.1 2004/12/16 01:38:36 face Exp $
// * $Log: ntbp_sodium_ion_channels_obj.cpp,v $
// * Revision 1.1.1.1  2004/12/16 01:38:36  face
// * Imported NetTrader 0.5 source from flyeye02.zoo.cam.ac.uk repository
// */
//
//#include "ntbp_sodium_ion_channels_obj.h"
//
///* ***      CONSTRUCTORS	***/
///** Create a NTBP_sodium_ion_channels_o */
//NTBP_sodium_ion_channels_o::NTBP_sodium_ion_channels_o(NTsize numNewChannels) :
//	NTBP_ion_channels_o(numNewChannels, 8) {
//	for (NTsize ll = 0; ll < _numStates() + 1; ll++)
//		stateCounterVec[ll] = 0;
//	stateCounterVec[0] = _numChannels();
//	stateCounterVec[1] = _numChannels();
//
//	setAsOpenState(4);
//}
//
///* ***      COPY AND ASSIGNMENT	***/
//NTBP_sodium_ion_channels_o::NTBP_sodium_ion_channels_o(
//		const NTBP_sodium_ion_channels_o & original) {
//	// add assignment code here
//}
//
//const NTBP_sodium_ion_channels_o&
//NTBP_sodium_ion_channels_o::operator=(const NTBP_sodium_ion_channels_o & right) {
//	if (this == &right)
//		return *this; // Gracefully handle self assignment
//	// add assignment code here
//	return *this;
//}
//
///* ***      DESTRUCTOR		***/
//NTBP_sodium_ion_channels_o::~NTBP_sodium_ion_channels_o() {
//}
//
///** @short
// @param      rateConstVec  = [ alphaM, betaM, alphaH, alphaH ] from std. HH naming convention
// @return     none
// \warning    unknown
// \bug        unknown
//
//inline NTreturn NTBP_sodium_ion_channels_o::UpdateStateProb(
//		vector<NTreal> rateConstVec) {
//	//	cerr << "NTBP_sodium_ion_channels_o::UpdateStateProb called" << endl;
//
//	NT_ASSERT( rateConstVec.size() == 4);
//	NTreal deltaT = _timeStep();
//
//	alphaM = rateConstVec[0];
//	betaM = rateConstVec[1];
//	alphaH = rateConstVec[2];
//	betaH = rateConstVec[3];
//
//	NTreal alphaMdeltaT = alphaM * deltaT;
//	NTreal betaMdeltaT = betaM * deltaT;
//	NTreal alphaHdeltaT = alphaH * deltaT;
//	NTreal betaHdeltaT = betaH * deltaT;
//	_probMatrix(0, 1) = 2 * alphaMdeltaT;
//	_probMatrix(1, 2) = 1 * alphaMdeltaT;
//	_probMatrix(2, 3) = alphaMdeltaT;
//	_probMatrix(4, 5) = _probMatrix(0, 1);
//	_probMatrix(5, 6) = _probMatrix(1, 2);
//	_probMatrix(6, 7) = _probMatrix(2, 3);
//
//	_probMatrix(7, 6) = 2 * betaMdeltaT;
//	_probMatrix(6, 5) = 1 * betaMdeltaT;
//	_probMatrix(5, 4) = betaMdeltaT;
//	_probMatrix(3, 2) = _probMatrix(7, 6);
//	_probMatrix(2, 1) = _probMatrix(6, 5);
//	_probMatrix(1, 0) = _probMatrix(5, 4);
//
//	_probMatrix(0, 4) = betaHdeltaT;
//	_probMatrix(1, 5) = betaHdeltaT;
//	_probMatrix(2, 6) = betaHdeltaT;
//	_probMatrix(3, 7) = betaHdeltaT;
//
//	_probMatrix(4, 0) = alphaHdeltaT;
//	_probMatrix(5, 1) = alphaHdeltaT;
//	_probMatrix(6, 2) = alphaHdeltaT;
//	_probMatrix(7, 3) = alphaHdeltaT;
//
//	return NT_SUCCESS;
//}
//
///* ***  PROTECTED                         ***   */
///* ***  PRIVATE                           ***   */
//
///* File skeleton generated by GenNTObj version 0.7. */
