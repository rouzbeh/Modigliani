/**\file ntbp_potassium_ion_channels_obj.h - NTBP_potassium_ion_channels_o class header
 * by Ahmed Aldo Faisal &copy; created 16.3.2001
 */
/* NetTrader - visualisation, scientific and financial analysis and simulation system
 * Version:  0.5
 * Copyright (C) 1998,1999,2000 Ahmed Aldo Faisal
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */


/* $Id: ntbp_potassium_ion_channels_obj.h,v 1.3 2002/03/13 19:23:27 face Exp $
* $Log: ntbp_potassium_ion_channels_obj.h,v $
* Revision 1.3  2002/03/13 19:23:27  face
* *** empty log message ***
*
* Revision 1.2  2001/10/12 09:18:36  face
* *** empty log message ***
*
* Revision 1.1  2001/10/03 14:37:52  face
* *** empty log message ***
*

*/
#ifndef _ntbp_potassium_ion_channels_obj_h_
#define _ntbp_potassium_ion_channels_obj_h_

/* NT core includes */
#include "nt_main.h"
#include "nt_types.h"
#include "nt_obj.h"
/* Parent includes */
#include "ntbp_ion_channels_obj.h"
/* NT includes */
#include "nt_error_obj.h"
#include "nt_uniform_rnd_dist_obj.h"
/* other includes */
#include <iostream>

/** @short NTBP_potassium_ion_channels_o class
4 state Hodgkin-Huxley based model of potassium conducting ion channels.
The open state has stateIndex 5.
\bug unknown
\warning  1. Care has to be take on stateCounterVec (as it is 9 dimensional (1 based index, 0 is SumVec))
          2. alpha and beta ARE RATE CONSTANTS (this changed)
*/
class NTBP_potassium_ion_channels_o : public NTBP_ion_channels_o {
public:
    /***   Constructors, Copy/Assignment and Destructor  ***/
    NTBP_potassium_ion_channels_o(NTsize numNewChannels = 1);
    NTBP_potassium_ion_channels_o(const NTBP_potassium_ion_channels_o & original);
    const NTBP_potassium_ion_channels_o & operator= (const NTBP_potassium_ion_channels_o & right);
    virtual ~NTBP_potassium_ion_channels_o();
    /* ***  Methods              ***/
    NTreturn Step();
    NTreturn BinomialStep();
    /* alpha, beta are the known HH rate constants (in ms^-1 ) */
    void ShowStates() const;
    NTsize NumOpen() const {
        return stateCounterVec[5];
    }
    NTsize NumClosed() const {
        return _numChannels() - NumOpen();
    }
    /**  */
    NTreturn UpdateStateProb(vector <NTreal> rateConstVec);
    /** set the steady state distribution of channel states for current rate constants, DIRTY HACK */
    NTreturn SteadyStateDistribution();
    /**  */
    bool ComputeGillespieStep( NTsize stateId );
    NTreal ComputeChannelStateTimeConstant() const;
    /* ***  Data                 ***/
protected:
    /* ***  Methods              ***/
    /* ***  Data                 ***/
private:
    /* ***  Methods              ***/
    /* ***  Data                 ***/
    NTreal alphaN;
    NTreal betaN;
    NTreal p12;
    NTreal p23;
    NTreal p34;
    NTreal p45;
    NTreal p54;
    NTreal p43;
    NTreal p32;
    NTreal p21;
    NTreal t21;
    NTreal t32;
    NTreal t43;
};

#endif /* _ntbp_potassium_ion_channels_obj_h_ */

/* File skeleton generated by GenNTObj version 0.7. */
