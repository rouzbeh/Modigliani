/**\file nt_id_management_obj.h - NT_id_management_o class header
 * by Ahmed Aldo Faisal &copy; created 3.7.1999
 */
/* NetTrader - visualisation, scientific and financial analysis and simulation system
 * Version:  0.4
 * Copyright (C) 1998,199 Ahmed Aldo Faisal
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

/* $Id: nt_id_management_obj.h,v 1.1 2001/06/11 13:18:56 face Exp $
* $Log: nt_id_management_obj.h,v $
* Revision 1.1  2001/06/11 13:18:56  face
* *** empty log message ***
*
* Revision 1.3  2000/10/03 08:30:03  face
* *** empty log message ***
*
* Revision 1.2  1999/07/16 15:05:38  face
* corrected error, switched to vector in id:mnanagement.added code::^
*
* Revision 1.1  1999/07/04 03:17:42  face
* minor mods
*

*/
#ifndef _nt_id_management_h_
#define _nt_id_management_h_


#include "nt_main.h"
#include "nt_types.h"
#include "nt_obj.h"

#include <list>
#include <vector>
#include <algorithm>

/** @short NT_id_management_o class
	Manage a contiguous list of IDs which might be
	used or freed at any time.
\bug unknown
\warning unknown
 */
class NT_id_management_o : public NT_o {
public:
    /***   Constructors, Copy/Assignment and Destructor  ***/
    /** Lowest and highest valid id */
    NT_id_management_o(NTid smallestId, NTid largestId);
    NT_id_management_o(const NT_id_management_o & original);
    const NT_id_management_o & operator= (const NT_id_management_o & right);
    virtual ~NT_id_management_o();
    /* ***  Methods              ***/
    NTbool IsTaken( NTid id) const;
    NTid LargestIssuedId();
    NTid IssueId();
    NTreturn FreeId(NTid returnedId);
    /* ***  Data                 ***/
protected:
    /* ***  Methods              ***/
    /* ***  Data                 ***/
private:
    /* ***  Methods              ***/
    /* ***  Data                 ***/
    NTid lowestId;
    NTid highestId;
    NTlong range;
    vector <NTid> usedIdList;
};
#endif /* _nt_id_management_h_ */

/* File skeleton generated by GenNTObj version 0.5. */
