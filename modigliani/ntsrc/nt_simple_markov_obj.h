/**\file nt_simple_markov_obj.h - NT_simple_markov_o class header
 * by Ahmed Aldo Faisal &copy; created 14.3.2001
 */
/* NetTrader - visualisation, scientific and financial analysis and simulation system
 * Version:  0.5
 * Copyright (C) 1998,1999,2000 Ahmed Aldo Faisal
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */


/* $Id: nt_simple_markov_obj.h,v 1.1 2001/06/11 13:18:56 face Exp $
* $Log: nt_simple_markov_obj.h,v $
* Revision 1.1  2001/06/11 13:18:56  face
* *** empty log message ***
*

*/
#ifndef _nt_simple_markov_obj_h_
#define _nt_simple_markov_obj_h_

/* NT core includes */
#include "nt_main.h"
#include "nt_types.h"
#include "nt_obj.h"
/* NT includes */
#include "nt_rnd_dist_obj.h"
#include "nt_uniform_rnd_dist_obj.h"

/* other includes */
#include "tnt/tnt.h"
#include "tnt/cmat.h"

using TNT::Matrix;

/** @short NT_simple_markov_o class
 	Basic numState-dimensional 1st order markov
 	state model. The transitions-probability matrix is
 	set up for sharing among multiple instances of the class
 	(hence no delete management of ptrPMtr)
\bug unknown
\warning ptrPMtr is not deleted!
*/
class NT_simple_markov_o : public NT_o {
public:
    /***   Constructors, Copy/Assignment and Destructor  ***/
    NT_simple_markov_o(NTint numMarkovStates = 1);
    NT_simple_markov_o(const NT_simple_markov_o & original);
    const NT_simple_markov_o & operator= (const NT_simple_markov_o & right);
    virtual ~NT_simple_markov_o();
    /* ***  Methods              ***/
    NTreturn MarkovStep();
    NTint    _stateIndex() const {
        return stateIndex;
    }
    NTreturn SetProbTransMatrix(Matrix<NTreal> * ptrNewMtr);
    NTreturn SetState(NTsize newStateIndex);
    /* ***  Data                 ***/
protected:
    /* ***  Methods              ***/
    /* ***  Data                 ***/
    Matrix <NTreal> * ptrTPMtr; //Transition-probability matrix
private:
    /* ***  Methods              ***/
    /* ***  Data                 ***/
    NTint stateIndex; // index of state 1...numStates
    NTsize numStates;
    NT_uniform_rnd_dist_o random;
    bool mtrAssigned;
};
#endif /* _nt_simple_markov_obj_h_ */

/* File skeleton generated by GenNTObj version 0.7. */
