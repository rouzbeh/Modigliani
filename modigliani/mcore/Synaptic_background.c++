/**\file ntbp_synaptic_background_obj.cpp - Synaptic_background class implementation
 * by Ahmed Aldo Faisal &copy; created 20.8.2003  
 */
/* NetTrader - visualisation, scientific and financial analysis and simulation system
 * Version:  0.5
 * Copyright (C) 1998,1999,2000 Ahmed Aldo Faisal    
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include "Synaptic_background.h"

using namespace mcore;

/* ***      CONSTRUCTORS	***/
/** Create a Synaptic_background */
Synaptic_background::Synaptic_background(mbase::Real newAvgSynBkCond, /* in nS */
mbase::Real newESynBk, /* Synaptic background reversal potential mV */
mbase::Real __attribute__((unused)) newSynSigma, /* Synaptic noise "diffusion" nS */
mbase::Real newSynTau, /* Synaptic time constant ms */
mbase::Real newVBase /* in mV */
) :
		Membrane_current(newESynBk - newVBase) {
	avgSynBkCond = newAvgSynBkCond;
	synSigma = newAvgSynBkCond;
	synTau = newSynTau;
	synVar = synSigma * synSigma;
	vBase = newVBase;

	gT = 0.0;
	amplitude = 0.0;
}

/* ***      COPY AND ASSIGNMENT	***/
Synaptic_background::Synaptic_background(const Synaptic_background & original) :
		Membrane_current(original._reversalPotential()) {
	// add assignment code here
}

const Synaptic_background&
Synaptic_background::operator=(const Synaptic_background & right) {
	if (this == &right)
		return (*this); // Gracefully handle self assignment
	// add assignment code here
	return (*this);
}

/* ***      DESTRUCTOR		***/
Synaptic_background::~Synaptic_background() {
}

/* ***  PUBLIC                                    ***   */
/** @short       
 @param      none
 @return     none
 \warning    unknown
 \bug        unknown
 */

mbase::Real Synaptic_background::compute_conductance() {
	return (Set_conductance(0.001 /* mS/nS */* gT /* nS */));
}

mbase::Mreturn Synaptic_background::step_current() {
	amplitude = sqrt(
			(synVar * synTau / 2.0) * (1.0 - exp(-2.0 * _timeStep() / synTau)));

	gT += avgSynBkCond + (gT - avgSynBkCond) * exp(-_timeStep() / synTau)
			+ amplitude * normRnd.RndVal();

	return (mbase::M_SUCCESS);
}

/* ***  PROTECTED                         ***   */
/* ***  PRIVATE                           ***   */

/* File skeleton generated by GenNTObj version 0.7. */

