/**\file Sequential_statistics.h - Sequential_statistics class header
 * @author Ahmed Aldo Faisal &copy; created 5.11.2000
 * @version  0.5
 * Copyright (C) 1998,1999,2000 Ahmed Aldo Faisal
 *
 * @section LICENSE
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRAMY; without even the implied warranty of
 * MERCHAMABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#ifndef _mbase_sequential_statistics_h_
#define _mbase_sequential_statistics_h_

/* M core includes */
#include "types.h"
#include "obj.h"
/* M includes */

/* other includes */
#include <cmath>
#include <climits>
#include <cfloat>

namespace modigliani_base{
/** @short Sequential_statistics class
\bug unknown
\warning unknown
*/
class Sequential_statistics : public Obj {
public:
    /***   Constructors, Copy/Assignment and Destructor  ***/
    Sequential_statistics();
    Sequential_statistics(const Sequential_statistics & original);
    const Sequential_statistics & operator= (const Sequential_statistics & right);
    virtual ~Sequential_statistics();
    /* ***  Methods              ***/
    void Reset();
    void Add(Real val);
    unsigned long int _counter() const {
        return (counter);
    }
    Real _average() const {
        return (average);
    }
    Real _valSquareAverage() const {
        return (valSquareAverage);
    }
    Real _variance() const {
        return (variance);
    }
    Real _min() const {
        return (min);
    }
    Real _max() const {
        return (max);
    }
    friend std::ostream& operator<< (std::ostream& str, const Sequential_statistics & self);
    /* ***  Data                 ***/
protected:
    /* ***  Methods              ***/
    /* ***  Data                 ***/
private:
    /* ***  Methods              ***/
    Real UpdateAverage(Real avg, Real val, Size n) const;
    /* ***  Data                 ***/
    unsigned long int counter;
    Real average;
    Real valSquareAverage;
    Real variance;
    Real min;
    Real max;
};
}
#endif /* _mbase_sequential_statistics_h_ */

/* File skeleton generated by GenMObj version 0.7. */
