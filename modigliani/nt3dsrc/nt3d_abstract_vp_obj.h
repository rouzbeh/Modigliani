/**\file nt3d_abstract_vp_obj.h - NT3D_abstract_vp_o class header 
 * by Ahmed Aldo Faisal &copy; created 9.5.1999  
 */
/* NetTrader - visualisation, scientific and financial analysis and simulation system
 * Version:  0.3
 * Copyright (C) 1998,199 Ahmed Aldo Faisal                            
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */ 

#ifndef _nt3d_abstract_vp_h_
#define _nt3d_abstract_vp_h_


#include "nt3d_vp_obj.h"
/** @short NT3D_abstract_vp_o class
The abstract viewport class houses the driver independent part
of the visualisation routines. It is connected/registered with a viewport
driver class NT3D_driver_vp_o childs. It uses the infrastructure
provided by a driver class via the NT3D_vp_o interface. 
\bug unknown
\warning do not override MakeCurrent() and SwapBuffer()
 */


 
class NT3D_abstract_vp_o : public NT3D_vp_o {
public:
  /***   Constructors, CopyAssignment and Destructor  ***/  
  NT3D_abstract_vp_o();
  NT3D_abstract_vp_o(const NT3D_abstract_vp_o & original);
  const NT3D_abstract_vp_o & operator= (const NT3D_abstract_vp_o & right);
  ~NT3D_abstract_vp_o();
  /* ***  Methods              ***/  
  virtual void Draw() = 0; 
  /** These methods call child and drv implementations */
  void Init() {InitChild();pVP->Init();}
  mbase::Mreturn Resize(mbase::Size_t newWidth, mbase::Size_t newHeight) {ResizeChild(newWidth,newHeight); return pVP->Resize(newWidth,newHeight);}
  void Redraw() {RedrawChild(); pVP->Redraw();}
  /* These methods call drv implemetnations only */
  void MakeCurrent() {pVP->MakeCurrent();}
  void SwapBuffer() {pVP->SwapBuffer();}
  NT3D_bitmap_o View2Bitmap() {return (NT3D_bitmap_o) pVP->View2Bitmap();}
  NT3D_bitmap_o * View2BitmapPtr(NT3D_bitmap_o * bmpPtr) {return pVP->View2BitmapPtr(bmpPtr);}
  mbase::Size_t _width(){return pVP->_width();}
  mbase::Size_t _height(){return pVP->_height();}
  /* ***  Data                 ***/
  protected:
  /* ***  Methods              ***/
  virtual void InitChild() = 0;
  virtual mbase::Mreturn ResizeChild(mbase::Size_t width, mbase::Size_t height) = 0;
  /* ***  Data                 ***/
  virtual void RedrawChild() = 0;
  /* ***  Data                 ***/  
  private:
  /* ***  Methods              ***/   
  /* ***  Data                 ***/
};
#endif /* _nt3d_abstract_vp_h_ */ 

/* File skeleton generated by GenNTObj version 0.4. */
