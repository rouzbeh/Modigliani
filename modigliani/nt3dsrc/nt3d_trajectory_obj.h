/**\file nt3d_trajectory_obj.h - NT3D_trajectory_o class header 
 * by Ahmed Aldo Faisal &copy; created 3.7.1999  
 */
/* NetTrader - visualisation, scientific and financial analysis and simulation system
 * Version:  0.4
 * Copyright (C) 1998,199 Ahmed Aldo Faisal                            
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */ 

/* $Id: nt3d_trajectory_obj.h,v 1.1.1.1 2004/12/16 01:38:36 face Exp $ 
* $Log: nt3d_trajectory_obj.h,v $
* Revision 1.1.1.1  2004/12/16 01:38:36  face
* Imported NetTrader 0.5 source from flyeye02.zoo.cam.ac.uk repository
*
* Revision 1.1  2001/06/29 13:16:55  face
* *** empty log message ***
*
* Revision 1.2  1999/07/05 00:50:48  face
* updated light color model
*
* Revision 1.1  1999/07/04 03:17:37  face
* minor mods
*

*/
#ifndef _nt3d_trajectory_h_
#define _nt3d_trajectory_h_

#include "nt3d_obj.h"
#include "nt3d_hierarchic_object_obj.h"

#include "mbase/nt_main.h"
#include "mbase/nt_types.h"
#include "mbase/nt_obj.h"

/** @short NT3D_trajectory_o class
Abstract trajectory unit that moves a projectile (any NT3D_object_o)
through space-time for a given speed 
\bug unknown
\warning unknown 
 */
class NT3D_trajectory_o : public NT3D_o {
public:
  /***   Constructors, Copy/Assignment and Destructor  ***/  
  NT3D_trajectory_o();
  NT3D_trajectory_o(const NT3D_trajectory_o & original);
  const NT3D_trajectory_o & operator= (const NT3D_trajectory_o & right);
  virtual ~NT3D_trajectory_o();
  /* ***  Methods              ***/
  virtual void Step() = 0;
  /* ***  Data                 ***/  
  protected:
  /* ***  Methods              ***/  
  /* ***  Data                 ***/
  /** heading of object */
  NT_std::vector3_o h;
  /** velocity std::vector */  
  NT_std::vector3_o v;
  /** position std::vector, synch with projectile.oPosition */
  NT_std::vector3_o x;
  /** mass (unused!) */
  mbase::Mreal m;
  /** timestep */
  NTlong timestep;
  /** Time resolution, how many seconds does a time step correspond. 
      This is not the actual computational duration of a timesteo */
  mbase::Mreal stepDuration;
  private:
  /* ***  Methods              ***/  
  /* ***  Data                 ***/
  /** NT3D_object_o that is moved along the trajectory */
  NT3D_object_o * projectile; 
};

#endif /* _nt3d_trajectory_h_ */ 

/* File skeleton generated by GenNTObj version 0.5. */
