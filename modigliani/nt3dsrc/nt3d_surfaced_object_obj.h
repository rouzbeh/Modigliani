/**\file nt3d_surfaced_object_obj.h - NT3D_surfaced_object_o class header 
 * by Ahmed Aldo Faisal &copy; created 19.5.2000  
 */
/* NetTrader - visualisation, scientific and financial analysis and simulation system
 * Version:  0.5
 * Copyright (C) 1998,1999,2000 Ahmed Aldo Faisal    
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */ 
  

/* $Id: nt3d_surfaced_object_obj.h,v 1.1.1.1 2004/12/16 01:38:36 face Exp $ 
* $Log: nt3d_surfaced_object_obj.h,v $
* Revision 1.1.1.1  2004/12/16 01:38:36  face
* Imported NetTrader 0.5 source from flyeye02.zoo.cam.ac.uk repository
*
* Revision 1.1  2001/06/29 13:16:55  face
* *** empty log message ***
*
* Revision 1.2  2000/06/26 19:14:06  face
* finally found the error that caused solid object to disappear:
* the scaling vector was not constructed in the 2nd constructor
* of the solid bject thus resulting in a zero object
* new demo file: showing some random graphics
*
* Revision 1.1  2000/06/13 20:10:26  face
* *** empty log message ***
*

*/
#ifndef _nt3d_surfaced_object_obj_h_ 
#define _nt3d_surfaced_object_obj_h_ 

/* NT core includes */
#include "ntsrc/nt_main.h" 
#include "ntsrc/nt_types.h" 
#include "ntsrc/nt_obj.h"  
/* Parent includes */
#include "nt3d_hierarchic_object_obj.h" 
/* NT includes */
#include "nt3d_material_obj.h"
#include "nt3d_texture_obj.h"

/* other includes */

/** @short NT3D_surfaced_object_o class 
\bug unknown
\warning unknown 
*/
class NT3D_surfaced_object_o : public NT3D_hierarchic_object_o {
public:
/***   Constructors, Copy/Assignment and Destructor  ***/  
NT3D_surfaced_object_o();
NT3D_surfaced_object_o(const NT_vector3_o & oPosition);
NT3D_surfaced_object_o(const NT3D_surfaced_object_o & original);
const NT3D_surfaced_object_o & operator= (const NT3D_surfaced_object_o & right);
virtual ~NT3D_surfaced_object_o();
/* ***  Methods              ***/ 
NTreturn SetTexture(NT3D_texture_o * newTexturePtr);
bool _textureSet() {return textureSet;};
bool _bUseTexture() {return bUseTexture;};
/* ***  Data                 ***/  

protected:
/* ***  Methods              ***/  
void DrawObj() { DrawSurfacedObj(); }; 
virtual void DrawSurfacedObj() {NT_CERR(1,"NT3D_surfaced_object_o::DrawSurfacedObj() - Error : This method not overridden by derived class");};
void ControlObj(NT3Dcontroller cntrl , NTint value);
virtual void ControlSurfacedObj(NT3Dcontroller __attribute__((unused)) cntrl , __attribute__((unused)) NTint value){NT_CERR(1,"NT3D_surfaced_object_o::ControlSurfacedObj() - Error : This method not overridden by derived class");};
/* ***  Data                 ***/
NT3D_material_o oMaterial;
NT3D_texture_o* oTexturePtr;


private:
/* ***  Methods              ***/  
NTreturn ResetTexture();
/* ***  Data                 ***/ 
bool textureSet;
bool bUseTexture;
};
#endif /* _nt3d_surfaced_object_obj_h_ */ 

/* File skeleton generated by GenNTObj version 0.7. */
