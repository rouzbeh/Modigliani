/**\file ntg_random_graph_obj.h - NTG_random_graph_o class header
 * by Ahmed Aldo Faisal &copy; created 10.10.2000
 */
/* NetTrader - visualisation, scientific and financial analysis and simulation system
 * Version:  0.5
 * Copyright (C) 1998,1999,2000 Ahmed Aldo Faisal
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */


/* $Id: ntg_random_graph_obj.h,v 1.2 2003/06/20 16:15:07 face Exp $
* $Log: ntg_random_graph_obj.h,v $
* Revision 1.2  2003/06/20 16:15:07  face
* *** empty log message ***
*
* Revision 1.1  2001/06/29 13:16:58  face
* *** empty log message ***
*
* Revision 1.3  2000/11/04 10:32:18  face
* *** empty log message ***
*
* Revision 1.1  2000/10/15 19:21:38  face
* *** empty log message ***
*

*/
#ifndef _ntg_random_graph_obj_h_
#define _ntg_random_graph_obj_h_

/* NT core includes */
#include "nt_main.h"
#include "nt_types.h"
#include "nt_obj.h"
/* Parent includes */
#include "ntg_graph_obj.h"
/* NT includes */
#include "nt_uniform_rnd_dist_obj.h"

/* other includes */


#include <cstdlib>
#include <vector>
#include <algorithm>
#include <cmath>

/* apparently g++ and STL dont know this one */
/* Apparently they do in 2011 */
//extern long int lrand48 __P ((void));


/** @short NTG_random_graph_o class
\bug unknown
\warning unknown
*/
class NTG_random_graph_o : public NTG_graph_o {
public:
    /***   Constructors, Copy/Assignment and Destructor  ***/
    NTG_random_graph_o(NTsize numInitialNodes, const NTG_node_o & nodeProto, const NTG_edge_o & edgeProto);
    NTG_random_graph_o(NTsize numInitialNodes, NTreal connectivityProbability, const NTG_node_o & nodeProto, const NTG_edge_o & edgeProto);
    NTG_random_graph_o(const NTG_random_graph_o & original);
    const NTG_random_graph_o & operator= (const NTG_random_graph_o & right);
    virtual ~NTG_random_graph_o();
    /* ***  Methods              ***/
    NTreturn AddRandomNode(const NTG_node_o & nodeProto);
    NTreturn AddRandomEdge(const NTG_edge_o & edgeProto);
    /* ***  Data                 ***/
protected:
    /* ***  Methods              ***/
    /* ***  Data                 ***/
private:
    /* ***  Methods              ***/
    void InitFullyConnectedGraph(NTsize numInitialNodes, const NTG_node_o & nodeProto, const NTG_edge_o & edgeProto);
    /* ***  Data                 ***/
    NTreal p;

};
#endif /* _ntg_random_graph_obj_h_ */

/* File skeleton generated by GenNTObj version 0.7. */
