.TH "TNT::Transpose_View" 3 "Wed Nov 17 2010" "Version 0.5" "NetTrader" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TNT::Transpose_View \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <transv.h>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef Array2D::element_type \fBT\fP"
.br
.ti -1c
.RI "typedef \fBT\fP \fBvalue_type\fP"
.br
.ti -1c
.RI "typedef \fBT\fP \fBelement_type\fP"
.br
.ti -1c
.RI "typedef \fBT\fP * \fBpointer\fP"
.br
.ti -1c
.RI "typedef \fBT\fP * \fBiterator\fP"
.br
.ti -1c
.RI "typedef \fBT\fP & \fBreference\fP"
.br
.ti -1c
.RI "typedef const \fBT\fP * \fBconst_iterator\fP"
.br
.ti -1c
.RI "typedef const \fBT\fP & \fBconst_reference\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "const Array2D & \fBarray\fP () const "
.br
.ti -1c
.RI "\fBSubscript\fP \fBnum_rows\fP () const "
.br
.ti -1c
.RI "\fBSubscript\fP \fBnum_cols\fP () const "
.br
.ti -1c
.RI "\fBSubscript\fP \fBlbound\fP () const "
.br
.ti -1c
.RI "\fBSubscript\fP \fBdim\fP (\fBSubscript\fP i) const "
.br
.ti -1c
.RI "\fBTranspose_View\fP (const \fBTranspose_View\fP< Array2D > &A)"
.br
.ti -1c
.RI "\fBTranspose_View\fP (const Array2D &A)"
.br
.ti -1c
.RI "const Array2D::element_type & \fBoperator()\fP (\fBSubscript\fP i, \fBSubscript\fP j) const "
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "const Array2D & \fBA_\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class Array2D> class TNT::Transpose_View< Array2D >"

.PP
Definition at line 39 of file transv.h.
.SH "Member Typedef Documentation"
.PP 
.SS "template<class Array2D> typedef const \fBT\fP* \fBTNT::Transpose_View\fP< Array2D >::\fBconst_iterator\fP"
.PP
Definition at line 53 of file transv.h.
.SS "template<class Array2D> typedef const \fBT\fP& \fBTNT::Transpose_View\fP< Array2D >::\fBconst_reference\fP"
.PP
Definition at line 54 of file transv.h.
.SS "template<class Array2D> typedef \fBT\fP \fBTNT::Transpose_View\fP< Array2D >::\fBelement_type\fP"
.PP
Definition at line 49 of file transv.h.
.SS "template<class Array2D> typedef \fBT\fP* \fBTNT::Transpose_View\fP< Array2D >::\fBiterator\fP"
.PP
Definition at line 51 of file transv.h.
.SS "template<class Array2D> typedef \fBT\fP* \fBTNT::Transpose_View\fP< Array2D >::\fBpointer\fP"
.PP
Definition at line 50 of file transv.h.
.SS "template<class Array2D> typedef \fBT\fP& \fBTNT::Transpose_View\fP< Array2D >::\fBreference\fP"
.PP
Definition at line 52 of file transv.h.
.SS "template<class Array2D> typedef Array2D::element_type \fBTNT::Transpose_View\fP< Array2D >::\fBT\fP"
.PP
Definition at line 47 of file transv.h.
.SS "template<class Array2D> typedef \fBT\fP \fBTNT::Transpose_View\fP< Array2D >::\fBvalue_type\fP"
.PP
Definition at line 48 of file transv.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class Array2D> \fBTNT::Transpose_View\fP< Array2D >::\fBTranspose_View\fP (const \fBTranspose_View\fP< Array2D > & A)\fC [inline]\fP"
.PP
Definition at line 74 of file transv.h.
.PP
.nf
: A_(A.A_) {};
.fi
.SS "template<class Array2D> \fBTNT::Transpose_View\fP< Array2D >::\fBTranspose_View\fP (const Array2D & A)\fC [inline]\fP"
.PP
Definition at line 75 of file transv.h.
.PP
.nf
: A_(A) {};
.fi
.SH "Member Function Documentation"
.PP 
.SS "template<class Array2D> const Array2D& \fBTNT::Transpose_View\fP< Array2D >::array () const\fC [inline]\fP"
.PP
Definition at line 57 of file transv.h.
.PP
References TNT::Transpose_View< Array2D >::A_.
.PP
.nf
{ return A_; }
.fi
.SS "template<class Array2D> \fBSubscript\fP \fBTNT::Transpose_View\fP< Array2D >::dim (\fBSubscript\fP i) const\fC [inline]\fP"
.PP
Definition at line 61 of file transv.h.
.PP
References TNT::Transpose_View< Array2D >::A_, TNT::Transpose_View< Array2D >::num_cols(), and TNT::Transpose_View< Array2D >::num_rows().
.PP
.nf
        {
#ifdef TNT_BOUNDS_CHECK
            assert( A_.lbound() <= i);
            assert( i<= A_.lbound()+1);
#endif
            if (i== A_.lbound())
                return num_rows();
            else
                return num_cols();
        }
.fi
.SS "template<class Array2D> \fBSubscript\fP \fBTNT::Transpose_View\fP< Array2D >::lbound () const\fC [inline]\fP"
.PP
Definition at line 60 of file transv.h.
.PP
References TNT::Transpose_View< Array2D >::A_.
.PP
Referenced by TNT::Transpose_View< Array2D >::operator()().
.PP
.nf
{ return A_.lbound(); }
.fi
.SS "template<class Array2D> \fBSubscript\fP \fBTNT::Transpose_View\fP< Array2D >::num_cols () const\fC [inline]\fP"
.PP
Definition at line 59 of file transv.h.
.PP
References TNT::Transpose_View< Array2D >::A_.
.PP
Referenced by TNT::Transpose_View< Array2D >::dim(), and TNT::matmult().
.PP
.nf
{ return A_.num_rows();}
.fi
.SS "template<class Array2D> \fBSubscript\fP \fBTNT::Transpose_View\fP< Array2D >::num_rows () const\fC [inline]\fP"
.PP
Definition at line 58 of file transv.h.
.PP
References TNT::Transpose_View< Array2D >::A_.
.PP
Referenced by TNT::Transpose_View< Array2D >::dim(), and TNT::matmult().
.PP
.nf
{ return A_.num_cols();}
.fi
.SS "template<class Array2D> const Array2D::element_type& \fBTNT::Transpose_View\fP< Array2D >::operator() (\fBSubscript\fP i, \fBSubscript\fP j) const\fC [inline]\fP"
.PP
Definition at line 78 of file transv.h.
.PP
References TNT::Transpose_View< Array2D >::A_, and TNT::Transpose_View< Array2D >::lbound().
.PP
.nf
        {
#ifdef TNT_BOUNDS_CHECK
        assert(lbound()<=i);
        assert(i<=A_.num_cols() + lbound() - 1);
        assert(lbound()<=j);
        assert(j<=A_.num_rows() + lbound() - 1);
#endif

            return A_(j,i);
        }
.fi
.SH "Member Data Documentation"
.PP 
.SS "template<class Array2D> const Array2D& \fBTNT::Transpose_View\fP< Array2D >::\fBA_\fP\fC [protected]\fP"
.PP
Definition at line 43 of file transv.h.
.PP
Referenced by TNT::Transpose_View< Array2D >::array(), TNT::Transpose_View< Array2D >::dim(), TNT::Transpose_View< Array2D >::lbound(), TNT::Transpose_View< Array2D >::num_cols(), TNT::Transpose_View< Array2D >::num_rows(), and TNT::Transpose_View< Array2D >::operator()().

.SH "Author"
.PP 
Generated automatically by Doxygen for NetTrader from the source code.
