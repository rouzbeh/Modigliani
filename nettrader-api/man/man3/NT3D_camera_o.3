.TH "NT3D_camera_o" 3 "Wed Nov 17 2010" "Version 0.5" "NetTrader" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NT3D_camera_o \- 
.PP
\fBNT3D_camera_o\fP class The class provides a freely movable imaginary camera in a three dimensional universe.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <nt3d_camera_obj.h>\fP
.PP
Inherits \fBNT3D_object_o\fP.
.PP
Inherited by \fBNT3D_target_camera_o\fP.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBNT3D_camera_o\fP (const \fBNT_vector3_o\fP &oNewPosition=NT_OriginVec3())"
.br
.ti -1c
.RI "\fBNT3D_camera_o\fP (const \fBNT_vector3_o\fP &oNewPosition, const \fBNT_vector3_o\fP &oNewTarget)"
.br
.ti -1c
.RI "\fBNT3D_camera_o\fP (const \fBNT3D_camera_o\fP &original)"
.br
.ti -1c
.RI "const \fBNT3D_camera_o\fP & \fBoperator=\fP (const \fBNT3D_camera_o\fP &right)"
.br
.ti -1c
.RI "virtual \fB~NT3D_camera_o\fP ()"
.br
.ti -1c
.RI "virtual void \fBDraw\fP ()"
.br
.RI "\fIset the camera position, i.e. \fP"
.ti -1c
.RI "\fBNTreal\fP \fB_aspectRatio\fP () const "
.br
.ti -1c
.RI "void \fBSet_aspectRatio\fP (\fBNTreal\fP newRatio)"
.br
.ti -1c
.RI "void \fBSetTarget\fP (const \fBNT_vector3_o\fP &oNewTarget)"
.br
.ti -1c
.RI "\fBNT_vector3_o\fP \fB_oTarget\fP ()"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBControlImpl\fP (\fBNT3Dcontroller\fP cntrl, \fBNTint\fP value)"
.br
.RI "\fISet the control/state variable in *this object. \fP"
.ti -1c
.RI "void \fBControlImpl\fP (\fBNT3Dcontroller\fP cntrl, \fBNTreal\fP value)"
.br
.ti -1c
.RI "void \fBControlImpl\fP (\fBNT3Dcontroller\fP cntrl, \fBNT_vector_o\fP value)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBNT_vector3_o\fP \fBoTarget\fP"
.br
.RI "\fIchange the value of the aspectRatio, not observable until \fBDraw()\fP call \fP"
.ti -1c
.RI "\fBNT_vector3_o\fP \fBoUp\fP"
.br
.RI "\fIwhere the up, i.e. \fP"
.ti -1c
.RI "bool \fBcameraChanged\fP"
.br
.ti -1c
.RI "\fBNTreal\fP \fBaspectRatio\fP"
.br
.RI "\fIThe ascpect ratio determines the ratio of width to height of the 'film' which is recorded from the camera. \fP"
.ti -1c
.RI "\fBNTreal\fP \fBfov\fP"
.br
.RI "\fIThe camera Field Of View (FOV) is an angle in ]0,180[. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Idea: Its position in space is determined by the translation vector of the parent class. The camera is rotated and moved like any \fBNT3D_object_o\fP object, where the rotation describes the direction in which the imaginary lens is pointed (default the positive X axis). Under all rotations the upper border of the camera 'picture' is parallel to a predefined direction (default is the positive Y axis).
.PP
Usage: The camera abtraction is based on a appropriate transformation of the projection and the model view matrices. Thus, if rendering should refelct what the camera 'see´s' \fBNT3D_camera_o.Draw()\fP should be invoked before the universe is drawn. 
.PP
\fBBug\fP
.RS 4
unknown 
.RE
.PP
\fBWarning:\fP
.RS 4
unknown 
.RE
.PP

.PP
Definition at line 110 of file nt3d_camera_obj.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "NT3D_camera_o::NT3D_camera_o (const \fBNT_vector3_o\fP & oNewPosition = \fCNT_OriginVec3()\fP)"
.SS "NT3D_camera_o::NT3D_camera_o (const \fBNT_vector3_o\fP & oNewPosition, const \fBNT_vector3_o\fP & oNewTarget)"
.SS "NT3D_camera_o::NT3D_camera_o (const \fBNT3D_camera_o\fP & original)"
.SS "virtual NT3D_camera_o::~NT3D_camera_o ()\fC [virtual]\fP"
.SH "Member Function Documentation"
.PP 
.SS "\fBNTreal\fP NT3D_camera_o::_aspectRatio () const\fC [inline]\fP"
.PP
Definition at line 122 of file nt3d_camera_obj.h.
.PP
References aspectRatio.
.PP
.nf
{return aspectRatio;}
.fi
.SS "\fBNT_vector3_o\fP NT3D_camera_o::_oTarget ()\fC [inline]\fP"
.PP
Definition at line 125 of file nt3d_camera_obj.h.
.PP
References oTarget.
.PP
.nf
{return oTarget; }
.fi
.SS "void NT3D_camera_o::ControlImpl (\fBNT3Dcontroller\fP cntrl, \fBNTreal\fP value)\fC [inline, protected, virtual]\fP"
.PP
Implements \fBNT3D_object_o\fP.
.PP
Definition at line 130 of file nt3d_camera_obj.h.
.PP
.nf
{}; 
.fi
.SS "void NT3D_camera_o::ControlImpl (\fBNT3Dcontroller\fP cntrl, \fBNT_vector_o\fP value)\fC [inline, protected, virtual]\fP"
.PP
Implements \fBNT3D_object_o\fP.
.PP
Definition at line 131 of file nt3d_camera_obj.h.
.PP
.nf
{};
.fi
.SS "void NT3D_camera_o::ControlImpl (\fBNT3Dcontroller\fP cntrl, \fBNTint\fP value)\fC [inline, protected, virtual]\fP"\fBControlImpl()\fP should be overridden by derived classes ONLY if control/state are to be applied to *this object ! 
.PP
Implements \fBNT3D_object_o\fP.
.PP
Definition at line 129 of file nt3d_camera_obj.h.
.PP
.nf
{};
.fi
.SS "virtual void NT3D_camera_o::Draw ()\fC [virtual]\fP"set the projection and viewing transformation, The method is virtual such that derived classes can overwrite it 
.PP
Implements \fBNT3D_object_o\fP.
.PP
Reimplemented in \fBNT3D_target_camera_o\fP.
.SS "const \fBNT3D_camera_o\fP& NT3D_camera_o::operator= (const \fBNT3D_camera_o\fP & right)"
.SS "void NT3D_camera_o::Set_aspectRatio (\fBNTreal\fP newRatio)\fC [inline]\fP"
.PP
Definition at line 123 of file nt3d_camera_obj.h.
.PP
References aspectRatio.
.PP
.nf
{aspectRatio = newRatio;}
.fi
.SS "void NT3D_camera_o::SetTarget (const \fBNT_vector3_o\fP & oNewTarget)\fC [inline]\fP"
.PP
Definition at line 124 of file nt3d_camera_obj.h.
.PP
References oTarget.
.PP
.nf
{ oTarget=oNewTarget;} 
.fi
.SH "Member Data Documentation"
.PP 
.SS "\fBNTreal\fP \fBNT3D_camera_o::aspectRatio\fP\fC [protected]\fP"It usually corresponds to the aspect ratio of a (rendering) viewport. 
.PP
Definition at line 143 of file nt3d_camera_obj.h.
.PP
Referenced by _aspectRatio(), and Set_aspectRatio().
.SS "bool \fBNT3D_camera_o::cameraChanged\fP\fC [protected]\fP"
.PP
Definition at line 139 of file nt3d_camera_obj.h.
.SS "\fBNTreal\fP \fBNT3D_camera_o::fov\fP\fC [protected]\fP"
.PP
Definition at line 145 of file nt3d_camera_obj.h.
.SS "\fBNT_vector3_o\fP \fBNT3D_camera_o::oTarget\fP\fC [protected]\fP"where to look at 
.PP
Definition at line 131 of file nt3d_camera_obj.h.
.PP
Referenced by _oTarget(), and SetTarget().
.SS "\fBNT_vector3_o\fP \fBNT3D_camera_o::oUp\fP\fC [protected]\fP"the upper edge of the camera 'picture' is 
.PP
Definition at line 137 of file nt3d_camera_obj.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for NetTrader from the source code.
