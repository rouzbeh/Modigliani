.TH "modigliani_model_format_grammar_t.h" 3 "Wed Nov 17 2010" "Version 0.5" "NetTrader" \" -*- nroff -*-
.ad l
.nh
.SH NAME
modigliani_model_format_grammar_t.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <boost/spirit/core.hpp>\fP
.br
\fC#include <boost/spirit/utility.hpp>\fP
.br
\fC#include <boost/spirit/symbols.hpp>\fP
.br
\fC#include <iostream>\fP
.br
\fC#include <fstream>\fP
.br
\fC#include <vector>\fP
.br
\fC#include <string>\fP
.br
\fC#include <stack>\fP
.br
\fC#include <cmath>\fP
.br
\fC#include <cstdlib>\fP
.br
\fC#include <algorithm>\fP
.br
\fC#include 'ntbp_membrane_compartment_sequence_obj.h'\fP
.br
\fC#include 'ntbp_sga_cylindrical_compartment_obj.h'\fP
.br
\fC#include 'ntbp_custom_cylindrical_compartment_obj.h'\fP
.br
\fC#include 'nt_error_obj.h'\fP
.br
\fC#include 'nt_vector_obj.h'\fP
.br
\fC#include 'nt_histogram_obj.h'\fP
.br
\fC#include 'nt_sequential_statistics_obj.h'\fP
.br
\fC#include 'tnt/tnt.h'\fP
.br
\fC#include 'tnt/cmat.h'\fP
.br
\fC#include 'nt_uniform_rnd_dist_obj.h'\fP
.br
\fC#include 'nt_binomial_rnd_dist_obj.h'\fP
.br
\fC#include 'nt_gaussian_rnd_dist_obj.h'\fP
.br
\fC#include 'nt3d_plot2d_vec_vp_obj.h'\fP
.br
\fC#include 'nt3d_glx_drv_obj.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBModiglianiFormatSkipGrammar_t\fP"
.br
.ti -1c
.RI "struct \fBModiglianiFormatSkipGrammar_t::definition< ScannerT >\fP"
.br
.ti -1c
.RI "struct \fBModiglianiModelFormatGrammar_t\fP"
.br
.ti -1c
.RI "struct \fBModiglianiModelFormatGrammar_t::definition< ScannerT >\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBBOOST_SPIRIT_DEBUG\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBBeginMakeMembraneCompartmentSequence\fP ()"
.br
.ti -1c
.RI "void \fBEndMakeMembraneCompartmentSequence\fP ()"
.br
.ti -1c
.RI "void \fBBeginMakeCylindricalMembraneCompartment\fP ()"
.br
.ti -1c
.RI "void \fBEndMakeCylindricalMembraneCompartment\fP ()"
.br
.ti -1c
.RI "void \fBBeginMakeSphericalMembraneCompartment\fP ()"
.br
.ti -1c
.RI "void \fBEndMakeSphericalMembraneCompartment\fP ()"
.br
.ti -1c
.RI "void \fBBeginMakeIonChannel\fP (\fBNTid\fP channelTypeNa)"
.br
.ti -1c
.RI "void \fBEndMakeIonChannel\fP ()"
.br
.ti -1c
.RI "template<typename GrammarT > void \fBparse\fP (GrammarT const &g, char const *filename)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "stack< void * > \fBmodigliani_core_stack\fP"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define BOOST_SPIRIT_DEBUG"
.PP
Definition at line 21 of file modigliani_model_format_grammar_t.h.
.SH "Function Documentation"
.PP 
.SS "void BeginMakeCylindricalMembraneCompartment ()"
.PP
Definition at line 75 of file modigliani_model_format_grammar_t.h.
.PP
References modigliani_core_stack.
.PP
.nf
{
    NTBP_custom_cylindrical_compartment_o *tmpPtr =  new NTBP_custom_cylindrical_compartment_o;
        modigliani_core_stack.push(tmpPtr);
}
.fi
.SS "void BeginMakeIonChannel (\fBNTid\fP channelTypeNa)"
.PP
Definition at line 105 of file modigliani_model_format_grammar_t.h.
.PP
References modigliani_core_stack, and NT_PARAM_OUT_OF_RANGE.
.PP
.nf
{
      NTBP_membrane_current_o *tmpNaPtr;
        switch (channelTypeNa) {
                case 1:
                      /* Stochastic active ion-channel currents */
                            tmpNaPtr =
                    new NTBP_multi_sodium_current_o (static_cast<NTBP_membrane_compartment_o*>(modigliani_core_stack.top())->_area(),
                        60, 20e-9   /* mSiemens per channel */
                            break;
                default: cerr <<'Somasimulator-v1 - Error  : Invalid Na channel type specified. Exiting.'; exit(NT_PARAM_OUT_OF_RANGE); break;
        }
        modigliani_core_stack.push(tmpNaPtr);
}
.fi
.SS "void BeginMakeMembraneCompartmentSequence ()"
.PP
Definition at line 64 of file modigliani_model_format_grammar_t.h.
.PP
References modigliani_core_stack.
.PP
.nf
{
        NTBP_membrane_compartment_sequence_o* tmpPtr =  new  NTBP_membrane_compartment_sequence_o;
        modigliani_core_stack.push(tmpPtr);
}
.fi
.SS "void BeginMakeSphericalMembraneCompartment ()"
.PP
Definition at line 88 of file modigliani_model_format_grammar_t.h.
.PP
.nf
{
        cerr << 'modigliani_core::MakeSphericalMembraneCompartment - Error : Not implemented.' << endl;
        exit(1);
}
.fi
.SS "void EndMakeCylindricalMembraneCompartment ()"
.PP
Definition at line 81 of file modigliani_model_format_grammar_t.h.
.PP
References modigliani_core_stack.
.PP
.nf
{
        NTBP_custom_cylindrical_compartment_o *tmpPtr   = static_cast(NTBP_custom_cylindrical_compartment_o*)   modigliani_core_stack.pop();
        static_cast<NTBP_membrane_compartment_sequence_o*>(modigliani_core_stack.top())->PushBak(tmpPtr);
}
.fi
.SS "void EndMakeIonChannel ()"
.PP
Definition at line 120 of file modigliani_model_format_grammar_t.h.
.PP
References modigliani_core_stack, and NTBP_IONIC.
.PP
.nf
{
        NTBP_membrane_current_o *tmpPtr = static_cast<NTBP_membrane_current_o*>(modigliani_core_stack.pop());
        static_cast<NTBP_membrane_compartment_o*>(modigliani_core_stack.top())->AttachCurrent (tmpNaPtr, NTBP_IONIC);
}
.fi
.SS "void EndMakeMembraneCompartmentSequence ()"
.PP
Definition at line 70 of file modigliani_model_format_grammar_t.h.
.PP
.nf
{
}
.fi
.SS "void EndMakeSphericalMembraneCompartment ()"
.PP
Definition at line 93 of file modigliani_model_format_grammar_t.h.
.PP
.nf
{
        cerr << 'modigliani_core::MakeSphericalMembraneCompartment - Error : Not implemented.' << endl;
        exit(1);
}
.fi
.SS "template<typename GrammarT > void parse (GrammarT const & g, char const * filename)"
.PP
Definition at line 285 of file modigliani_model_format_grammar_t.h.
.PP
.nf
{
    ifstream in(filename);

    if (!in)
    {
        cerr << 'Could not open input file: ' << filename << endl;
        return;
    }

    in.unsetf(ios::skipws); //  Turn of white space skipping on the stream

    vector<char> vec;
    std::copy(
        istream_iterator<char>(in),
        istream_iterator<char>(),
        std::back_inserter(vec));

    vector<char>::const_iterator start = vec.begin();
    vector<char>::const_iterator end = vec.end();

        ModiglianiFormatSkipGrammar_t skip;

    parse_info<vector<char>::const_iterator> result =
        parse(start, end, g, skip);

    if (result.full)
        cerr << filename << ' Parses OK' << endl;
    else {
        cerr << filename << ' Fails Parsing' << endl;
        for (int i = 0; i < 50; i++)
        {
            if (result.stop == end)
                break;
            cerr << *result.stop++;
        }
        cerr << endl;
    }
}
.fi
.SH "Variable Documentation"
.PP 
.SS "stack<void*> \fBmodigliani_core_stack\fP"
.PP
Definition at line 61 of file modigliani_model_format_grammar_t.h.
.PP
Referenced by BeginMakeCylindricalMembraneCompartment(), BeginMakeIonChannel(), BeginMakeMembraneCompartmentSequence(), EndMakeCylindricalMembraneCompartment(), and EndMakeIonChannel().
.SH "Author"
.PP 
Generated automatically by Doxygen for NetTrader from the source code.
