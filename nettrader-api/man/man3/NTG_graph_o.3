.TH "NTG_graph_o" 3 "Wed Nov 17 2010" "Version 0.5" "NetTrader" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NTG_graph_o \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ntg_graph_obj.h>\fP
.PP
Inherits \fBNT_o\fP.
.PP
Inherited by \fBNTG_random_graph_o\fP, and \fBNTG_undirected_graph_o\fP.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBNTG_graph_o\fP ()"
.br
.ti -1c
.RI "\fBNTG_graph_o\fP (const \fBNTG_graph_o\fP &original)"
.br
.ti -1c
.RI "const \fBNTG_graph_o\fP & \fBoperator=\fP (const \fBNTG_graph_o\fP &right)"
.br
.ti -1c
.RI "virtual \fB~NTG_graph_o\fP ()"
.br
.ti -1c
.RI "\fBNTbool\fP \fBInGraph\fP (\fBNTid\fP selNode) const "
.br
.ti -1c
.RI "\fBNTbool\fP \fBIsConnected\fP (\fBNTid\fP source, \fBNTid\fP target) const "
.br
.ti -1c
.RI "\fBNTbool\fP \fBIsSymmetricConnected\fP (\fBNTid\fP a, \fBNTid\fP b) const "
.br
.ti -1c
.RI "\fBNTbool\fP \fBGraphConsistency\fP ()"
.br
.ti -1c
.RI "\fBNTsize\fP \fBNumNodes\fP () const "
.br
.ti -1c
.RI "\fBNTsize\fP \fBNumEdges\fP () const "
.br
.ti -1c
.RI "\fBNTsize\fP \fBNumConvergentConnections\fP (\fBNTid\fP id) const "
.br
.ti -1c
.RI "\fBNTG_NodeIdList\fP \fBShortestPath\fP () const "
.br
.ti -1c
.RI "\fBNTsize\fP \fBDistance\fP (\fBNTid\fP a, \fBNTid\fP b) const "
.br
.ti -1c
.RI "\fBNTG_EdgeContainer\fP \fBConvergentConnections\fP (\fBNTid\fP id) const "
.br
.ti -1c
.RI "\fBNTG_EdgeContainer\fP \fBDivergentConnections\fP (\fBNTid\fP id) const "
.br
.ti -1c
.RI "\fBNTG_NodeIdList\fP \fBNodeIdList\fP () const "
.br
.ti -1c
.RI "\fBNTG_EdgeContainer\fP \fBEdgeList\fP () const "
.br
.ti -1c
.RI "void \fBShowStatistics\fP ()"
.br
.ti -1c
.RI "void \fBShowAdjacencyMatrix\fP ()"
.br
.ti -1c
.RI "\fBNTG_AdjacencyMatrix\fP \fBAdjacencyMatrix\fP ()"
.br
.ti -1c
.RI "\fBNTG_NodeDistanceMatrix\fP \fBNodeDistanceMatrix\fP (const \fBNTG_NodeDistanceMatrix\fP &aMtr) const "
.br
.ti -1c
.RI "\fBNT_sequential_statistics_o\fP \fBAdjacencyDistanceStatistics\fP ()"
.br
.ti -1c
.RI "\fBNTid\fP \fBAddNode\fP (const \fBNTG_node_o\fP &newNode)"
.br
.ti -1c
.RI "\fBNTreturn\fP \fBDeleteNode\fP (\fBNTid\fP delNode)"
.br
.ti -1c
.RI "\fBNTid\fP \fBRandomNodeId\fP () const "
.br
.ti -1c
.RI "virtual \fBNTreturn\fP \fBConnect\fP (\fBNTid\fP source, \fBNTid\fP target)"
.br
.ti -1c
.RI "virtual \fBNTreturn\fP \fBConnect\fP (\fBNTid\fP source, \fBNTid\fP target, \fBNTG_edge_o\fP newEdge)"
.br
.ti -1c
.RI "virtual \fBNTreturn\fP \fBSymmetricConnect\fP (\fBNTid\fP source, \fBNTid\fP target)"
.br
.ti -1c
.RI "virtual \fBNTreturn\fP \fBSymmetricConnect\fP (\fBNTid\fP source, \fBNTid\fP target, const \fBNTG_edge_o\fP &newEdge)"
.br
.ti -1c
.RI "virtual \fBNTreturn\fP \fBDisconnect\fP (\fBNTid\fP source, \fBNTid\fP target)"
.br
.ti -1c
.RI "virtual \fBNTreturn\fP \fBSymmetricDisconnect\fP (\fBNTid\fP source, \fBNTid\fP target)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual \fBNTreturn\fP \fBDisconnectNode\fP (\fBNTid\fP node)"
.br
.ti -1c
.RI "virtual \fBNTreturn\fP \fBDisconnectDivergence\fP (\fBNTid\fP source)"
.br
.ti -1c
.RI "virtual \fBNTreturn\fP \fBDisconnectConvergence\fP (\fBNTid\fP target)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 138 of file ntg_graph_obj.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "NTG_graph_o::NTG_graph_o ()"
.SS "NTG_graph_o::NTG_graph_o (const \fBNTG_graph_o\fP & original)"
.SS "virtual NTG_graph_o::~NTG_graph_o ()\fC [virtual]\fP"
.SH "Member Function Documentation"
.PP 
.SS "\fBNTid\fP NTG_graph_o::AddNode (const \fBNTG_node_o\fP & newNode)"
.SS "\fBNT_sequential_statistics_o\fP NTG_graph_o::AdjacencyDistanceStatistics ()"
.SS "\fBNTG_AdjacencyMatrix\fP NTG_graph_o::AdjacencyMatrix ()"
.SS "virtual \fBNTreturn\fP NTG_graph_o::Connect (\fBNTid\fP source, \fBNTid\fP target)\fC [virtual]\fP"
.SS "virtual \fBNTreturn\fP NTG_graph_o::Connect (\fBNTid\fP source, \fBNTid\fP target, \fBNTG_edge_o\fP newEdge)\fC [virtual]\fP"
.SS "\fBNTG_EdgeContainer\fP NTG_graph_o::ConvergentConnections (\fBNTid\fP id) const"
.SS "\fBNTreturn\fP NTG_graph_o::DeleteNode (\fBNTid\fP delNode)"
.SS "virtual \fBNTreturn\fP NTG_graph_o::Disconnect (\fBNTid\fP source, \fBNTid\fP target)\fC [virtual]\fP"
.SS "virtual \fBNTreturn\fP NTG_graph_o::DisconnectConvergence (\fBNTid\fP target)\fC [protected, virtual]\fP"
.SS "virtual \fBNTreturn\fP NTG_graph_o::DisconnectDivergence (\fBNTid\fP source)\fC [protected, virtual]\fP"
.SS "virtual \fBNTreturn\fP NTG_graph_o::DisconnectNode (\fBNTid\fP node)\fC [protected, virtual]\fP"
.SS "\fBNTsize\fP NTG_graph_o::Distance (\fBNTid\fP a, \fBNTid\fP b) const"
.SS "\fBNTG_EdgeContainer\fP NTG_graph_o::DivergentConnections (\fBNTid\fP id) const"
.SS "\fBNTG_EdgeContainer\fP NTG_graph_o::EdgeList () const"
.SS "\fBNTbool\fP NTG_graph_o::GraphConsistency ()\fC [inline]\fP"
.PP
Definition at line 150 of file ntg_graph_obj.h.
.PP
References NT_TRUE.
.PP
.nf
{return NT_TRUE;}
.fi
.SS "\fBNTbool\fP NTG_graph_o::InGraph (\fBNTid\fP selNode) const"
.SS "\fBNTbool\fP NTG_graph_o::IsConnected (\fBNTid\fP source, \fBNTid\fP target) const"
.SS "\fBNTbool\fP NTG_graph_o::IsSymmetricConnected (\fBNTid\fP a, \fBNTid\fP b) const"
.SS "\fBNTG_NodeDistanceMatrix\fP NTG_graph_o::NodeDistanceMatrix (const \fBNTG_NodeDistanceMatrix\fP & aMtr) const"
.SS "\fBNTG_NodeIdList\fP NTG_graph_o::NodeIdList () const"
.SS "\fBNTsize\fP NTG_graph_o::NumConvergentConnections (\fBNTid\fP id) const"
.SS "\fBNTsize\fP NTG_graph_o::NumEdges () const"
.SS "\fBNTsize\fP NTG_graph_o::NumNodes () const"
.SS "const \fBNTG_graph_o\fP& NTG_graph_o::operator= (const \fBNTG_graph_o\fP & right)"
.SS "\fBNTid\fP NTG_graph_o::RandomNodeId () const"
.SS "\fBNTG_NodeIdList\fP NTG_graph_o::ShortestPath () const"
.SS "void NTG_graph_o::ShowAdjacencyMatrix ()"
.SS "void NTG_graph_o::ShowStatistics ()"
.SS "virtual \fBNTreturn\fP NTG_graph_o::SymmetricConnect (\fBNTid\fP source, \fBNTid\fP target)\fC [virtual]\fP"
.SS "virtual \fBNTreturn\fP NTG_graph_o::SymmetricConnect (\fBNTid\fP source, \fBNTid\fP target, const \fBNTG_edge_o\fP & newEdge)\fC [virtual]\fP"
.SS "virtual \fBNTreturn\fP NTG_graph_o::SymmetricDisconnect (\fBNTid\fP source, \fBNTid\fP target)\fC [virtual]\fP"

.SH "Author"
.PP 
Generated automatically by Doxygen for NetTrader from the source code.
