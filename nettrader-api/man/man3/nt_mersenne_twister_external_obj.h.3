.TH "nt_mersenne_twister_external_obj.h" 3 "Wed Nov 17 2010" "Version 0.5" "NetTrader" \" -*- nroff -*-
.ad l
.nh
.SH NAME
nt_mersenne_twister_external_obj.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <iostream>\fP
.br
\fC#include <limits.h>\fP
.br
\fC#include <stdio.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBMTRand\fP"
.br
.RI "\fIfile nt_mersenne_twiser_external_obj.h - uniform random number class 1:1 copy from MersenneTwister.h Mersenne Twister random number generator -- a C++ class \fBMTRand\fP Based on code by Makoto Matsumoto, Takuji Nishimura, and Shawn Cokus Richard J. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "std::ostream & \fBoperator<<\fP (std::ostream &os, const \fBMTRand\fP &mtrand)"
.br
.ti -1c
.RI "std::istream & \fBoperator>>\fP (std::istream &is, \fBMTRand\fP &mtrand)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "std::ostream& operator<< (std::ostream & os, const \fBMTRand\fP & mtrand)\fC [inline]\fP"
.PP
Definition at line 301 of file nt_mersenne_twister_external_obj.h.
.PP
References MTRand::left, MTRand::N, and MTRand::state.
.PP
.nf
{
    register const MTRand::uint32 *s = mtrand.state;
    register int i = mtrand.N;
    for( ; i--; os << *s++ << '\t' ) {}
    return os << mtrand.left;
}
.fi
.SS "std::istream& operator>> (std::istream & is, \fBMTRand\fP & mtrand)\fC [inline]\fP"
.PP
Definition at line 310 of file nt_mersenne_twister_external_obj.h.
.PP
References MTRand::left, MTRand::N, MTRand::pNext, and MTRand::state.
.PP
.nf
{
    register MTRand::uint32 *s = mtrand.state;
    register int i = mtrand.N;
    for( ; i--; is >> *s++ ) {}
    is >> mtrand.left;
    mtrand.pNext = &mtrand.state[mtrand.N-mtrand.left];
    return is;
}
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for NetTrader from the source code.
